{"version":3,"sources":["components/helper-components/Button.tsx","components/helper-components/Card.tsx","components/helper-components/Spinner.tsx","lib/merge.ts","components/helper-components/Markdown.tsx","contexts/language.tsx","hooks/useLocalStorage.ts","components/form-components/DatePicker.tsx","components/form-components/TextInput.tsx","components/helper-components/StyledSelect.tsx","components/form-components/Select.tsx","components/form-components/SingleSelect.tsx","components/form-components/Boolean.tsx","components/form-components/Multiselect.tsx","components/form-components/TextArea.tsx","lib/states.ts","components/form-components/StateSelect.tsx","components/form-components/Number.tsx","components/helper-components/CircleIcon.tsx","components/form-components/File.tsx","forms/index.ts","components/form-components/Checkbox.tsx","lib/validation.ts","contexts/form.tsx","components/Sidebar.tsx","components/Summary.tsx","components/Review.tsx","aws-exports.js","components/Confirmation.tsx","components/Question.tsx","components/Form.tsx","components/USDR.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","props","label","rest","className","primary","fill","gap","style","icon","paddingLeft","reverse","paddingRight","paddingTop","paddingBottom","Paragraph","margin","fontWeight","undefined","Card","children","otherProps","Box","background","border","borderRadius","spinning","version","viewBox","width","height","opacity","d","attributeName","type","from","to","dur","repeatCount","Spinner","align","justify","merge","result","sources","source","Object","keys","key","ListItem","styleProps","Markdown","size","headings","map","n","vertical","components","li","component","p","span","a","target","rel","initialState","language","setLanguage","LanguageContext","createContext","LanguageProvider","defaultValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","setItem","stringify","useLocalStorage","useEffect","detectedLanguageCode","en","es","zh","navigator","Provider","DatePicker","v","question","useContext","FormContext","values","setValue","id","moment","toDate","maxWidth","onChange","date","utc","format","clearIcon","calendarIcon","TextInput","errors","hasError","Boolean","e","StyledSelect","open","setOpen","onOpen","onClose","Select","translateCopy","options","option","name","a11yTitle","top","labelKey","valueKey","reduce","SingleSelectRadio","o","RadioButtonGroup","split","form","instructions","SingleSelect","Multiselect","isSelected","includes","CheckBox","marginTop","checked","Array","isArray","filter","val","TextArea","states","state","StateSelect","Number","typeProps","allowNegative","prefix","thousandSeparator","decimalScale","allowEmptyFormatting","mask","customInput","GrommetTextInput","onValueChange","floatValue","CircleIcon","color","flex","File","translateByID","onDrop","acceptedFiles","Promise","all","file","resolve","reader","FileReader","onerror","onabort","onload","contents","encode","readAsArrayBuffer","files","f","useDropzone","minSize","maxSize","accept","getRootProps","getInputProps","isDragActive","isFocused","onRemove","pad","alignContent","outline","cursor","bottom","display","left","FormNextLink","i","direction","Image","src","right","Checkmark","FormClose","onClick","padding","hoverIndicator","getFlattenedQuestions","questions","flattenedQuestions","push","switch","subQuestions","typeComponentMappings","shorttext","dropdown","boolean","multiselect","longtext","decimal","NumberComponent","integer","phone","ssn","checkbox","getInstructions","c","Error","isQuestionValid","required","dependencies","validate","schema","copyID","strict","Joi","string","validator","number","precision","min","max","allow","custom","helpers","isValid","find","array","items","some","regex","object","optional","valid","forEach","validation","validationValue","startsWith","slice","RegExp","test","ISO_8601","other","od","isSameOrAfter","isSameOrBefore","unit","length","add","setError","FormProvider","setForm","setValues","setErrors","completion","setCompletion","pageIndex","setPageIndex","formValidationError","setFormValidationError","ky","get","text","formSample","yaml","safeLoad","json","sampleContents","message","effect","catch","err","useCallback","copy","variables","replace","m","questionID","String","document","title","description","querySelector","createElement","setAttribute","head","appendChild","content","horizontal","newValues","omit","validationErrors","newErrors","page","pages","dep","q","depErrors","canContinueFromPage","questionIds","every","canContinue","setPage","index","scrollTo","languages","Sidebar","ResponsiveContext","currentPage","percent","Math","floor","canClickPage","range","shrink","seal","maxHeight","objectFit","Heading","level","disabled","disabledKey","Text","Caret","transform","xmlns","stroke","strokeWidth","Edit","fillRule","clipRule","Summary","checkedPages","setCheckedPages","openPages","setOpenPages","borderBottom","weight","borderTop","Review","awsmobile","aws_project_region","aws_cloud_logic_custom","endpoint","region","Confirmation","Clipboard","position","backgroundColor","domain","location","href","Question","Component","Amplify","configure","awsconfig","Form","canSubmit","setCanSubmit","claimID","setClaimID","onSubmit","API","post","body","metadata","uuid","hostname","DNS","timestamp","Date","host","resp","log","response","data","pageTitles","pageComponents","heading","grow","FormPrevious","FormNext","USDR","Header","elevation","tabIndex","Footer","sizing","theme","global","colors","dark","light","focus","selected","control","radius","paragraph","small","medium","large","xlarge","xxlarge","1","2","3","4","5","6","select","icons","container","button","checkBox","check","App","Grommet","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"scAoCeA,EAjCwE,SAACC,GAAW,IACzFC,EAAmBD,EAAnBC,MAAUC,EAD8E,YACrEF,EADqE,WAGhG,OACE,kBAAC,IAAD,eACEG,UAAWH,EAAMI,QAAU,iBAAmB,iBAC9CC,MAAM,EACNC,IAAI,UACJC,MACEP,EAAMQ,KACF,CACEC,YAAaT,EAAMU,QAAU,OAAS,OACtCC,aAAcX,EAAMU,QAAU,OAAS,OACvCE,WAAY,MACZC,cAAe,OAEjB,CACED,WAAY,MACZC,cAAe,OAGvBZ,MACEA,EACE,kBAACa,EAAA,EAAD,CAAWC,OAAO,OAAOR,MAAO,CAAES,WAAY,MAC3Cf,QAEDgB,GAEFf,K,SCXKgB,EAjBkB,SAAClB,GAAW,IACnCmB,EAA4BnB,EAA5BmB,SAAaC,EADqB,YACNpB,EADM,cAE1C,OACE,kBAACqB,EAAA,EAAD,eACElB,UAAU,OACVmB,WAAW,UACXf,MAAO,CACLgB,OAAQ,oBACRC,aAAc,QAEZJ,GAEHD,ICVDM,EACJ,yBAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,OAAOC,OAAO,OAAOxB,KAAK,WACrE,0BAAMyB,QAAQ,MAAMC,EAAE,0FACtB,0BAAMA,EAAE,sDACN,sCACEC,cAAc,YACdC,KAAK,SACLC,KAAK,UACLC,GAAG,YACHC,IAAI,OACJC,YAAY,iBAMPC,EAAU,kBACrB,kBAACjB,EAAA,EAAD,CAAKkB,MAAM,SAASC,QAAQ,UACzBf,I,iBCvBE,SAASgB,IAAyC,IACvD,IAAMC,EAA8B,GADmB,mBAAhCC,EAAgC,yBAAhCA,EAAgC,gBAEvD,cAAqBA,EAArB,eACE,IADG,IAAMC,EAAM,KACf,MAAkBC,OAAOC,KAAKF,GAA9B,eAAuC,CAAlC,IAAMG,EAAG,KACRH,EAAOG,KACTL,EAAOK,GAAOH,EAAOG,IAK3B,OAAOL,ECLT,IAAMM,EAAqB,SAAC,GAAiC,IAA/B7B,EAA8B,EAA9BA,SAAa8B,EAAiB,4BAC1D,OACE,4BACE,kBAACnC,EAAA,EAAD,eAAWT,MAAM,EAAMU,OAAO,QAAWkC,GACtC9B,KAWI+B,EAA4B,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,OAAQoC,EAAqB,EAArBA,KAAMhC,EAAe,EAAfA,SAIlDiC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,GAAD,iCACjCA,GAAM,CAAEtD,MAAOyC,EAAM,CAAE1B,OAAQ,CAAEwC,SAAU,UAAa,CAAEd,QAAOU,cAExE,OACE,kBAAC,IAAD,CACEK,WAAYf,EAAK,WAAL,GACV,CACEgB,GAAI,CACFC,UAAWV,EACXhD,MAAOyC,EAAM,CAAE1B,SAAQoC,UAEzBQ,EAAG,CACDD,UAAW5C,IACXd,MAAOyC,EAAM,CAAEpC,MAAM,GAAQ,CAAEU,SAAQoC,UAEzCS,KAAM,CACJF,UAAW5C,IACXd,MAAOyC,EAAM,CAAEpC,MAAM,EAAM8C,KAAM,SAAW,CAAEpC,SAAQoC,UAExDU,EAAG,CACD7D,MAAO,CAAE8D,OAAQ,SAAUC,IAAK,0BAf1B,mBAkBPX,MAGJjC,I,oCC/CP,IAAM6C,EAAe,CAGnBC,SAAU,KACVC,YAAa,SAACD,MAEHE,EAAkBC,wBAAcJ,GAEhCK,EAA6B,SAACrE,GAAW,IAAD,ECR9C,SAA4B+C,EAAauB,GAA2C,IAAD,EAClDC,oBAAS,WAC7C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQ5B,GACzC,OAAOyB,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAEP,OADAC,QAAQD,MAAMA,GACPR,MAP6E,mBACjFU,EADiF,KACpEC,EADoE,KAoBxF,MAAO,CAACD,EATS,SAACE,GAChB,IACED,EAAeC,GACfT,OAAOC,aAAaS,QAAQpC,EAAK6B,KAAKQ,UAAUF,IAChD,MAAOJ,GACPC,QAAQD,MAAMA,MDPcO,CAAwB,0BAA2BrB,EAAaC,UAD7C,mBAC5CA,EAD4C,KAClCC,EADkC,KAInDoB,qBAAU,WACR,IAOMC,EAPkC,CACtCC,GAAI,KACJ,QAAS,KACT,QAAS,KACTC,GAAI,KACJC,GAAI,MAE+BC,UAAU1B,UAE3CsB,IAAyBtB,GAC3BC,EAAYqB,KAEb,CAACtB,EAAUC,IAEd,IAAMgB,EAAQ,CAAEjB,SAAUA,EAAUC,eACpC,OAAO,kBAACC,EAAgByB,SAAjB,CAA0BV,MAAOA,GAAQlF,EAAMmB,W,qEEYzC0E,EAnCsC,SAAC7F,GAAW,IAK3D8F,EAJIC,EAAa/F,EAAb+F,SADsD,EAEjCC,qBAAWC,IAAhCC,EAFsD,EAEtDA,OAAQC,EAF8C,EAE9CA,SACVjB,EAAQgB,EAAOH,EAASK,IAG1BlB,IACFY,EAAIO,IAAOnB,EAAO,wBAAwB,GAAMoB,UAqBlD,OACE,kBAACjF,EAAA,EAAD,CAAKd,MAAO,CAAEgG,SAAU,UACtB,kBAAC,IAAD,CAAiBpG,UAAU,cAAcqG,SApB5B,SAACC,GAMhBN,EAASJ,EALJU,EAKcJ,IAAOK,IAAID,GAAcE,OAAO,6BAJ9B1F,IAkB0CiE,MAAOY,EAAGc,UAAW,KAAMC,aAAc,S,SCb7FC,EAhBoB,SAAC9G,GAAW,IACrC+F,EAAa/F,EAAb+F,SADoC,EAEPC,qBAAWC,IAAxCC,EAFoC,EAEpCA,OAAQC,EAF4B,EAE5BA,SAAUY,EAFkB,EAElBA,OACpB7B,EAAQgB,EAAOH,EAASK,IAExBY,EAAWC,QAAQF,EAAOhB,EAASK,KACzC,OACE,kBAAC,IAAD,CACEjG,UAAW6G,EAAW,qBAAuB,aAC7C9B,MAAQA,GAAoB,GAC5BsB,SAAU,SAACU,GAAD,OAA4Cf,EAASJ,EAAUmB,EAAEpD,OAAOoB,QAClF3E,MAAO,CAAEgG,SAAU,Y,SCjBZY,EAAsC,SAACnH,GAAW,IAAD,EACpCuE,oBAAS,GAD2B,mBACrD6C,EADqD,KAC/CC,EAD+C,KAG5D,OACE,kBAAChG,EAAA,EAAD,CAAKd,MAAO,CAAEgG,SAAU,SAAWpG,UAAWiH,EAAO,yBAA2B,YAC9E,kBAAC,IAAD,eAAeE,OAAQ,kBAAMD,GAAQ,IAAOE,QAAS,kBAAMF,GAAQ,KAAYrH,MCkCtEwH,EA/BiB,SAACxH,GAAW,IAClC+F,EAAa/F,EAAb+F,SADiC,EAEGC,qBAAWC,IAA/CC,EAFiC,EAEjCA,OAAQC,EAFyB,EAEzBA,SAAUsB,EAFe,EAEfA,cACpBvC,EAAQgB,EAAOH,EAASK,IAE9B,IAAKpG,EAAM+F,SACT,OAAO,kBAAC1E,EAAA,EAAD,MAGT,IAAK0E,EAAS2B,QAEZ,OADA3C,QAAQD,MAAM,qCACP,KAGT,IAAM4C,EAAU3B,EAAS2B,QAAQrE,KAAI,SAACsE,GAAD,MAAa,CAAEC,KAAMH,EAAcE,EAAOC,MAAOxB,GAAIuB,EAAOvB,OAEjG,OACE,kBAAC,EAAD,CACEyB,UAAWJ,EAAc1B,EAAS6B,MAClC7G,OAAQ,CAAE+G,IAAK,UACfJ,QAASA,EACTK,SAAS,OACTC,SAAU,CACRjF,IAAK,KACLkF,QAAQ,GAEV/C,MAAOA,EACPsB,SAAU,gBAAGmB,EAAH,EAAGA,OAAH,OAA0DxB,EAASJ,EAAU4B,EAAOvB,Q,SCOrF8B,EAnC4B,SAAClI,GAAW,IAC7C+F,EAAa/F,EAAb+F,SAD4C,EAERC,qBAAWC,IAA/CC,EAF4C,EAE5CA,OAAQC,EAFoC,EAEpCA,SAAUsB,EAF0B,EAE1BA,cAEpBvC,EAAQgB,EAAOH,EAASK,IAE9B,IAAKL,IAAaA,EAAS2B,QACzB,OAAO,kBAACrG,EAAA,EAAD,MAGT,IAAMqG,EAAU3B,EAAS2B,QAAQrE,KAAI,SAAC8E,GACpC,IAAMrC,EAAC,UAAMC,EAASK,GAAf,YAAqB+B,EAAE/B,IAC9B,MAAO,CACLA,GAAIN,EACJZ,MAAOY,EACP8B,KAAM9B,EACN7F,MAAOwH,EAAcU,EAAEP,UAI3B,OACE,kBAACvG,EAAA,EAAD,CAAKlB,UAAU,sBACb,kBAACiI,EAAA,EAAD,CACER,KAAMH,EAAc1B,EAAS6B,MAC7BF,QAASA,EACTxC,MAAK,UAAKa,EAASK,GAAd,YAAoBlB,GACzBsB,SAAU,SAACU,GACT,IAAMd,EAAKc,EAAEpD,OAAOoB,MAAMmD,MAAM,KAAK,GACrCrI,EAAMwG,SAAWxG,EAAMwG,SAASJ,GAAMD,EAASJ,EAAUK,QCJpDa,EAvBkB,SAACjH,GAAW,IAAD,EACfgG,qBAAWC,IAA9BqC,EADkC,EAClCA,KAAMnC,EAD4B,EAC5BA,SAERJ,EAAW/F,EAAM+F,SACvBA,EAAS2B,QAAU,CACjB,CACEtB,GAAI,OACJwB,KAAMU,EAAKC,aAAL,KAER,CACEnC,GAAI,QACJwB,KAAMU,EAAKC,aAAL,KASV,OAAO,kBAACC,EAAD,CAAczC,SAAUA,EAAUS,SAJxB,SAACJ,GAChBD,EAASJ,EAAiB,SAAPK,O,SC+BRqC,EA/CsB,SAACzI,GAAW,IACvC+F,EAAa/F,EAAb+F,SADsC,EAEFC,qBAAWC,IAA/CC,EAFsC,EAEtCA,OAAQC,EAF8B,EAE9BA,SAAUsB,EAFoB,EAEpBA,cACpBvC,EAAQgB,EAAOH,EAASK,IAmB9B,OAAKL,GAAaA,EAAS2B,QAKzB,kBAACrG,EAAA,EAAD,KACG0E,EAAS2B,QAAQrE,KAAI,SAAC8E,GACrB,IAAMO,EAAazB,QAAQ/B,GAASA,EAAMyD,SAASR,EAAE/B,KACrD,OACE,kBAAC/E,EAAA,EAAD,CAAKlB,UAAWuI,EAAa,6BAA+B,WAAY3F,IAAKoF,EAAE/B,IAC7E,kBAACwC,EAAA,EAAD,CACErI,MAAO,CACLsI,UAAW,OAEbC,QAASJ,EACTzI,MAAO,kBAACa,EAAA,EAAD,CAAWC,OAAO,QAAQ0G,EAAcU,EAAEP,OACjDpB,SAAU,kBAjCCmB,EAiCmBQ,EAAE/B,GAhCrClB,EAGA6D,MAAMC,QAAQ9D,GAGfA,EAAMyD,SAAShB,GACVxB,EACLJ,EACAb,EAAM+D,QAAO,SAACC,GAAD,OAASA,IAAQvB,WAIlCxB,EAASJ,EAAD,sBAAeb,GAAf,CAAsByC,KATrBxB,EAASJ,EAAU,CAACb,EAAOyC,IAH3BxB,EAASJ,EAAU,CAAC4B,IAFT,IAACA,UAkBd,kBAACtG,EAAA,EAAD,O,SCXI8H,EAdmB,SAACnJ,GAAW,IACpC+F,EAAa/F,EAAb+F,SADmC,EAENC,qBAAWC,IAAxCC,EAFmC,EAEnCA,OAAQC,EAF2B,EAE3BA,SACVa,EAHqC,EAEjBD,OACFhB,EAASK,IAEjC,OACE,kBAAC,IAAD,CACElB,MAAOgB,EAAOH,EAASK,IACvBI,SAAU,SAACU,GAAD,OAAOf,EAASJ,EAAUmB,EAAEpD,OAAOoB,QAC7C3E,MAAO,CAAEgB,OAAQyF,EAAW,oBAAsB,sBC6C3CoC,EA9DS,CACpB,CAAExB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,SAAUxB,GAAI,MACtB,CAAEwB,KAAM,iBAAkBxB,GAAI,MAC9B,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,aAAcxB,GAAI,MAC1B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,cAAexB,GAAI,MAC3B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,uBAAwBxB,GAAI,MACpC,CAAEwB,KAAM,iCAAkCxB,GAAI,MAC9C,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,OAAQxB,GAAI,MACpB,CAAEwB,KAAM,SAAUxB,GAAI,MACtB,CAAEwB,KAAM,QAASxB,GAAI,MACrB,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,OAAQxB,GAAI,MACpB,CAAEwB,KAAM,SAAUxB,GAAI,MACtB,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,YAAaxB,GAAI,MACzB,CAAEwB,KAAM,QAASxB,GAAI,MACrB,CAAEwB,KAAM,mBAAoBxB,GAAI,MAChC,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,gBAAiBxB,GAAI,MAC7B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,YAAaxB,GAAI,MACzB,CAAEwB,KAAM,cAAexB,GAAI,MAC3B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,SAAUxB,GAAI,MACtB,CAAEwB,KAAM,gBAAiBxB,GAAI,MAC7B,CAAEwB,KAAM,aAAcxB,GAAI,MAC1B,CAAEwB,KAAM,aAAcxB,GAAI,MAC1B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,iBAAkBxB,GAAI,MAC9B,CAAEwB,KAAM,eAAgBxB,GAAI,MAC5B,CAAEwB,KAAM,2BAA4BxB,GAAI,MACxC,CAAEwB,KAAM,OAAQxB,GAAI,MACpB,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,SAAUxB,GAAI,MACtB,CAAEwB,KAAM,QAASxB,GAAI,MACrB,CAAEwB,KAAM,eAAgBxB,GAAI,MAC5B,CAAEwB,KAAM,cAAexB,GAAI,MAC3B,CAAEwB,KAAM,eAAgBxB,GAAI,MAC5B,CAAEwB,KAAM,iBAAkBxB,GAAI,MAC9B,CAAEwB,KAAM,eAAgBxB,GAAI,MAC5B,CAAEwB,KAAM,YAAaxB,GAAI,MACzB,CAAEwB,KAAM,QAASxB,GAAI,MACrB,CAAEwB,KAAM,OAAQxB,GAAI,MACpB,CAAEwB,KAAM,UAAWxB,GAAI,MACvB,CAAEwB,KAAM,iBAAkBxB,GAAI,MAC9B,CAAEwB,KAAM,WAAYxB,GAAI,MACxB,CAAEwB,KAAM,aAAcxB,GAAI,MAC1B,CAAEwB,KAAM,gBAAiBxB,GAAI,MAC7B,CAAEwB,KAAM,YAAaxB,GAAI,MACzB,CAAEwB,KAAM,UAAWxB,GAAI,OAGqB/C,KAAI,SAACgG,GAAD,MAAY,CAC5DzB,KAAM,CACJpC,GAAI6D,EAAMzB,KACVnC,GAAI4D,EAAMzB,KACVlC,GAAI2D,EAAMzB,MAEZxB,GAAIiD,EAAMjD,OCvDGkD,EANsB,SAACtJ,GAAW,IACvC+F,EAAa/F,EAAb+F,SAER,OADAA,EAAS2B,QAAU0B,EACZ,kBAAC,EAAD,CAAQrD,SAAUA,K,UCFdwD,GAA0B,SAACvJ,GAAW,IACzC+F,EAAa/F,EAAb+F,SADwC,EAEnBC,qBAAWC,IAAhCE,EAFwC,EAExCA,SAAUY,EAF8B,EAE9BA,OAMdyC,EAAwC,CAC1CvH,KAAM,MACNwH,eAAe,GAEK,kBAAlB1D,EAAS9D,KACXuH,EAAS,eACJA,EADI,CAEPE,OAAQ,IACRC,mBAAmB,EACnBC,aAAc,IAEW,YAAlB7D,EAAS9D,KAClBuH,EAAS,eACJA,EADI,CAEPI,aAAc,IAEW,YAAlB7D,EAAS9D,KAClBuH,EAAS,eACJA,EADI,CAEPG,mBAAmB,EACnBC,aAAc,IAEW,UAAlB7D,EAAS9D,KAClBuH,EAAS,eACJA,EADI,CAEPI,aAAc,EACdjD,OAAQ,oBACRkD,sBAAsB,EACtBC,KAAM,MAEmB,QAAlB/D,EAAS9D,OAClBuH,EAAS,eACJA,EADI,CAEPI,aAAc,EACdjD,OAAQ,cACRkD,sBAAsB,EACtBC,KAAM,OAIV,IAAM9C,EAAWC,QAAQF,EAAOhB,EAASK,KACzC,OACE,kBAAC,KAAD,eACEjG,UAAW6G,EAAW,qBAAuB,aAC7C+C,YAAaC,IACbC,cAjDiD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtD/D,EAASJ,EAAUmE,IAiDjB3J,MAAO,CAAEgG,SAAU,UACfiD,K,kDCzDGW,I,cAAwE,SAACnK,GAAW,IACvFoK,EAAyBpK,EAAzBoK,MAAUhJ,EAD4E,YAC7DpB,EAD6D,WAG9F,OACE,kBAACqB,EAAA,EAAD,eACEd,MAAO,CAAEsB,OAAQ,OAAQD,MAAO,OAAQJ,aAAc,QACtDF,WAAY,CAAE8I,SACdC,MAAM,EACN7H,QAAQ,SACRD,MAAM,SACNpC,UAAU,eACNiB,GAEHpB,EAAMmB,YC+HEmJ,GAtHe,SAACtK,GAAW,IAChC+F,EAAa/F,EAAb+F,SAD+B,EAEKC,qBAAWC,IAA/CC,EAF+B,EAE/BA,OAAQC,EAFuB,EAEvBA,SAAUoE,EAFa,EAEbA,cACpBrF,EAAQgB,EAAOH,EAASK,IAExBoE,EAAM,uCAAG,WAAOC,GAAP,eAAA5G,EAAA,sEACO6G,QAAQC,IAC1BF,EAAcpH,KAAI,SAACuH,GACjB,OAAO,IAAIF,SAA+B,SAACG,GACzC,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,WACfH,KAEFC,EAAOG,QAAU,WACfJ,KAGFC,EAAOI,OAAS,WACdL,EAAQ,CACNjD,KAAMgD,EAAKhD,KACX3F,KAAM2I,EAAK3I,KACXkB,KAAMyH,EAAKzH,KACXgI,SAAUC,kBAAON,EAAOpI,WAG5BoI,EAAOO,kBAAkBT,UArBlB,OACPU,EADO,OA0BbnF,EAASJ,EAAD,sBAAgBb,GAAS,IAAzB,YAAkCoG,EAAMrC,QAAO,SAACsC,GAAD,QAASA,QA1BnD,2CAAH,sDAL2B,EAkC0BC,aAAY,CAC3EC,QAAS,IACTC,QAAS,QAETlB,SAEAmB,OAAQ,CAAC,YAAa,aAAc,YAAa,qBAN3CC,EAlC+B,EAkC/BA,aAAcC,EAlCiB,EAkCjBA,cAAeC,EAlCE,EAkCFA,aAAcC,EAlCZ,EAkCYA,UAS7CC,EAAW,WACf7F,EAASJ,OAAU9E,IAGfmJ,EAAQ0B,GAAgBC,EAAY,UAAY,UAEtD,OACE,oCACE,kBAAC1K,EAAA,EAAD,eACE4K,IAAI,SACJ3L,IAAI,QACJ4L,aAAa,SACb3J,MAAM,SACNhC,MAAO,CACL4L,QAAQ,cAAD,OAAgB/B,GACvBgC,OAAQ,WAEV9K,WAAY,CACV8I,MAAO,WAETjK,UAAU,kBACVY,OAAQ,CAAEsL,OAAQ,SACdT,KAEJ,0BAAWC,KACX,kBAAC/K,EAAA,EAAD,CAAWC,OAAQ,CAAEwC,SAAU,QAAU6G,MAAM,SAC5CG,EAAc,4BAEjB,kBAACzJ,EAAA,EAAD,CAAWC,OAAQ,CAAEwC,SAAU,QAAU6G,MAAM,SAC5CG,EAAc,qBAEjB,kBAACzJ,EAAA,EAAD,CAAWC,OAAQ,CAAEwC,SAAU,QAAU6G,MAAM,UAAU7J,MAAO,CAAE+L,QAAS,OAAQtL,WAAY,MAC5FuJ,EAAc,6BACf,kBAAC,GAAD,CAAYH,MAAM,UAAUrJ,OAAQ,CAAEwL,KAAM,QAC1C,kBAACC,GAAA,EAAD,CAAcpC,MAAM,QAAQjK,UAAU,wBAI3C+E,GACCA,EAAM7B,KAAI,SAACyC,EAAG2G,GAAJ,OACR,kBAACpL,EAAA,EAAD,CAAKqL,UAAU,MAAMT,IAAI,QAAQpK,OAAO,OAAOkB,IAAK0J,EAAGlK,MAAM,SAASC,QAAQ,WAC5E,kBAACnB,EAAA,EAAD,CAAKqL,UAAU,OAEb,kBAACC,EAAA,EAAD,CAAOC,IAAI,gBAAgBhL,MAAM,SACjC,kBAACd,EAAA,EAAD,CAAWC,OAAQ,CAAEwL,KAAM,OAAQF,OAAQ,SAAWvG,EAAE8B,OAE1D,kBAACvG,EAAA,EAAD,CAAKqL,UAAU,MAAMnK,MAAM,UACzB,kBAACzB,EAAA,EAAD,CAAWC,OAAQ,CAAEwC,SAAU,OAAQsJ,MAAO,SAC3CtC,EAAc,2BAEjB,kBAAC,GAAD,CAAYH,MAAM,WAChB,kBAAC0C,GAAA,EAAD,CAAW1C,MAAM,QAAQ7J,MAAO,CAAEqB,MAAO,OAAQC,OAAQ,WAE3D,kBAAC,IAAD,CACErB,KAAM,kBAACuM,GAAA,EAAD,MACNC,QAAShB,EACT7I,KAAK,QACLpC,OAAQ,CAAEwL,KAAM,QAChBhM,MAAO,CACLiB,aAAc,OACdyL,QAAS,OAEX7M,SAAS,EACTgK,MAAM,OACN8C,eAAgB,CACd9C,MAAO,sBCpGlB,SAAS+C,GAAsBC,EAAuBlH,GAC3D,IADuF,EACjFmH,EAAiC,GADgD,cAGhED,GAHgE,IAGvF,2BAAkC,CAAC,IAAxBrH,EAAuB,QAChCsH,EAAmBC,KAAKvH,GADQ,IAI1Bb,EAAQgB,EAFCH,EAAPK,IAIR,QADkCnF,IAAViE,GAAuBa,EAASwH,aAAqCtM,IAA3B8E,EAASwH,OAAOrI,GAC7D,CACnB,IAAMsI,EAAezH,EAASwH,OAAQrI,GACtCmI,EAAmBC,KAAnB,MAAAD,EAAkB,YAASF,GAAsBK,EAActH,OAXoB,8BAevF,OAAOmH,EAGT,IAAMI,GAAiE,CACrEC,UAAW5G,EACXL,KAAMZ,EACN8H,SAAUnG,EACV,gBAAiBgB,EACjBoF,QAAS3G,EACT4G,YAAapF,EACbqF,SAAU3E,EACV,oBAAqB9H,IACrB,eAAgBiI,EAChByE,QAASC,GACTC,QAASD,GACT,gBAAiBA,GACjBE,MAAOF,GACPG,IAAKH,GACLpD,KAAMN,GACN8D,SC/DuC,SAACpO,GAAW,IAC3C+F,EAAsB/F,EAAtB+F,SAAa7F,EAD6B,YACpBF,EADoB,gBAENgG,qBAAWC,IAA/CC,EAF0C,EAE1CA,OAAQC,EAFkC,EAElCA,SAAUsB,EAFwB,EAExBA,cAEpBvC,EAAQgB,EAAOH,EAASK,IAE9B,OACE,kBAAC/E,EAAA,EAAD,CAAKlB,WAAqB,IAAV+E,EAAiB,6BAA+B,YAC9D,kBAAC,IAAD,eACE4D,SAAmB,IAAV5D,EACTjF,MAAO,kBAACa,EAAA,EAAD,KAAY2G,EAAc1B,EAAS2B,QAAS,GAAGE,OACtDpB,SAAU,kBAAML,EAASJ,GAAWb,KAChChF,O,8FCfZ,SAASmO,GAAgB/F,EAAYlC,GACnC,IAAMkI,EAAIhG,EAAKC,aAAanC,GAC5B,IAAKkI,EACH,MAAM,IAAIC,MAAJ,mCAAsCnI,IAE9C,OAAOkI,EAGF,SAASE,GACdzI,EACAb,EACAgB,EACAoC,GAC6C,IAAD,IACtCvB,EAAiB,GAGvB,QAAc9F,IAAViE,EAAqB,CACvB,IAAIa,EAAS0I,SAKX,MAAO,CAAE1H,OAAQ,GAAI2H,aAAc,IAJnC3H,EAAOuG,KAAKe,GAAgB/F,EAAM,sBAQtC,SAASqG,EAAYC,EAAoB1J,EAAY2J,GAA6B,IACxE/J,EAAU8J,EAAOE,SAASH,SAASzJ,GAAnCJ,MAOR,OANIA,GACFiC,EAAOuG,KAAKe,GAAgB/F,EAAMuG,KAK5B/J,EAKV,OAAQiB,EAAS9D,MACf,IAAK,QACC0M,EAAiBI,KAAIC,SAAU9J,EAAO,mBACnC+J,KAAUN,SAASzJ,IACtB6B,EAAOuG,KAAKe,GAAgB/F,EAAM,mBAGtC,MACF,IAAK,UACHqG,EAASI,KAAIG,SAASC,UAAU,GAAGC,IAAI,GAAGC,IAAI,YAAanK,EAAO,mBAClE,MACF,IAAK,UACHyJ,EAASI,KAAIG,SAASC,UAAU,GAAGC,IAAI,GAAGC,IAAI,YAAanK,EAAO,mBAClE,MACF,IAAK,gBACHyJ,EAASI,KAAIG,SAASC,UAAU,GAAGC,IAAI,GAAGC,IAAI,YAAanK,EAAO,kBAClE,MACF,IAAK,YACL,IAAK,WACHyJ,GACE,EAAAI,KAAIC,UACDM,MADH,oBACavJ,EAAS0I,SAAW,GAAK,CAAC,MACpCY,IAAsB,cAAlBtJ,EAAS9D,KAAuB,IAAM,KAC7CiD,EACA,gBAEF,MACF,IAAK,OAGHyJ,EACEI,KAAIC,SAASO,QAAO,SAACzJ,EAAW0J,GAE9B,OAAOnJ,IAAOP,EAAG,wBADF,GACkC2J,UAAY3J,EAAI0J,EAAQ1K,MAAM,kBAEjFI,EACA,gBAEF,MACF,IAAK,WACL,IAAK,gBACL,IAAK,eACH,GAAIyJ,EAAiBI,KAAIC,SAAU9J,EAAO,kBAAmB,CAC3D,IAAMwC,EAA4B,iBAAlB3B,EAAS9D,KAA0BmH,EAASrD,EAAS2B,SAEjE,OAACA,QAAD,IAACA,OAAD,EAACA,EAASgI,MAAK,SAACvH,GAAD,OAAOA,EAAE/B,KAAOlB,OACjC6B,EAAOuG,KAAKe,GAAgB/F,EAAM,mBAGtC,MACF,IAAK,cACH,GAAIqG,EAAmBI,KAAIY,QAAQC,MAAMb,KAAIC,UAAW9J,EAAO,kBAC7CA,EAAM2K,MAAK,SAAC/J,GAAO,IAAD,EAChC,QAAO,UAACC,EAAS2B,eAAV,aAAC,EAAkBgI,MAAK,SAACvH,GAAD,OAAOA,EAAE/B,KAAON,UAG/CiB,EAAOuG,KAAKe,GAAgB/F,EAAM,mBAGtC,MACF,IAAK,UACHqG,EAASI,KAAInB,UAAW1I,EAAO,mBAC/B,MACF,IAAK,QACHyJ,EAASI,KAAIG,SAASC,UAAU,GAAGC,IAAI,KAAYC,IAAI,YAAanK,EAAO,iBAC3E,MACF,IAAK,MACHyJ,EAASI,KAAIG,SAASC,UAAU,GAAGC,IAAI,KAAWC,IAAI,WAAYnK,EAAO,eACzE,MACF,IAAK,MACHyJ,EAASI,KAAIC,SAASc,MAAM,iBAAkB5K,EAAO,eACrD,MACF,IAAK,UAGHyJ,EAASI,KAAIC,SAAU9J,EAAO,mBAC9B,MACF,IAAK,oBAEH6B,EAAOuG,KAAKe,GAAgB/F,EAAM,8BAClC,MACF,IAAK,OACHqG,EACEI,KAAIY,QACDP,IAAIrJ,EAAS0I,SAAW,EAAI,GAC5BY,IAAI,IACJO,MACCb,KAAIgB,OAAO,CACTnI,KAAMmH,KAAIC,SAASgB,WACnB/N,KAAM8M,KAAIC,SAASiB,MAAM,YAAa,aAAc,YAAa,mBACjE9M,KAAM4L,KAAIG,SAASE,IAAI,GACvBjE,SAAU4D,KAAIC,SAASI,IAAI,MAGjClK,EACA,gBAEF,MACF,IAAK,YACW,IAAVA,GACF6B,EAAOuG,KAAKe,GAAgB/F,EAAM,qBAKxC,IAAMoG,EAAyB,GA+C/B,OA9CA,UAAA3I,EAAS4I,gBAAT,SAAmBuB,SAAQ,SAACC,GAAgB,IAUtCV,EATIxN,EAAwCkO,EAAxClO,KAAamO,EAA2BD,EAAlCjL,MAAwBJ,EAAUqL,EAAVrL,MAUtC,GAR+B,kBAApBsL,GAAgCA,EAAgBC,WAAW,QAIpE3B,EAAapB,KAAK8C,EAAgBE,MAAM,IAI7B,UAATrO,EAAkB,CACpB,IAAM6N,EAAQ,IAAIS,OAAOH,GACzBX,EAA2B,kBAAVvK,GAAsB4K,EAAMU,KAAKtL,QAC7C,GAAa,kBAATjD,EAA0B,CACnC,IAAMmE,EAAKgK,EAAgBE,MAAM,GACjCb,EAAUvK,IAAUgB,EAAOE,QACtB,IAAa,QAATnE,GAA2B,QAATA,IACL,SAAlB8D,EAAS9D,KAAiB,CAC5B,IAAMF,EAAIsE,IAAOnB,EAAiBmB,IAAOoK,UACzC,GAAIL,EAAgBC,WAAW,OAAQ,CAErC,IAAMjK,EAAKgK,EAAgBE,MAAM,GAC3BI,EAAQxK,EAAOE,GACrB,QAAcnF,IAAVyP,EAEFjB,GAAU,MACL,CACL,IAAMkB,EAAKtK,IAAOqK,EAAiBrK,IAAOoK,UAC1ChB,EAAmB,QAATxN,EAAiBF,EAAE6O,cAAcD,GAAM5O,EAAE8O,eAAeF,QAE/D,CAEL,IAAMG,EAAOV,EAAgBA,EAAgBW,OAAS,GAChDzN,EAAIiG,OAAO6G,EAAgBE,MAAM,EAAGF,EAAgBW,OAAS,IAC7DpN,EAAI0C,MAAS2K,IAAI1N,EAAGwN,GAC1BrB,EAAmB,QAATxN,EAAiBF,GAAK4B,EAAI5B,GAAK4B,GAK1C8L,GACH1I,EAAOuG,KAAKxI,MAIT,CAAEiC,SAAQ2H,gBC3KnB,IAAM1K,GAAe,CAGnBsE,UAAMrH,EACNiF,OAAQ,GACRa,OAAQ,GACRZ,SAAU,SAACJ,EAAoBb,KAC/B+L,SAAU,SAAC7K,EAAYlB,MAGZe,GAAc7B,wBAAyBJ,IAOvCkN,GAAyB,SAAClR,GAAW,IAAD,EACvBuE,mBAA2BP,GAAasE,MADjB,mBACxCA,EADwC,KAClC6I,EADkC,OAEnB5M,mBAAiBP,GAAakC,QAFX,mBAExCA,EAFwC,KAEhCkL,EAFgC,OAGnB7M,mBAAiBP,GAAa+C,QAHX,mBAGxCA,EAHwC,KAGhCsK,EAHgC,OAIX9M,mBAAkC,IAJvB,mBAIxC+M,EAJwC,KAI5BC,EAJ4B,OAKbhN,mBAAiB,GALJ,mBAKxCiN,EALwC,KAK7BC,EAL6B,OAMOlN,qBANP,mBAMxCmN,EANwC,KAMnBC,EANmB,KAOvC1N,EAAa+B,qBAAW7B,GAAxBF,SAERqB,qBAAU,YACI,uCAAG,sCAAAzB,EAAA,sEAMoB6G,QAAQC,IAAI,CAACiH,KAAGC,IAAI,YAAYC,OAAQF,KAAGC,IAAI,mBAAmBC,SANtF,mCAMNxJ,EANM,KAMAyJ,EANA,cAWX5G,EAAW6G,KAAKC,SAAS3J,EAAM,CAC7B4J,MAAM,IAERC,EAAiBH,KAAKC,SAASF,EAAY,CACzCG,MAAM,IAfG,yDAkBXP,EAAuB,CACrBS,QAAS,4BACTtN,MAAM,EAAD,KApBI,2BAyDbqM,EA7B+B,OAAbhG,EACUgH,EAAiBhH,GA7BhC,0DAAH,qDA4DZkH,GAASC,OAAM,SAACC,GACdxN,QAAQD,MAAMyN,QAEf,IAEH,IAiCM9K,EAAgB+K,uBACpB,SAACC,EAAYC,GACX,IAAIZ,EAAOW,EAAKxO,GAqBhB,OAZA6N,EAAOA,EAAKa,QAAQ,4BAA4B,SAACC,EAAG7P,GAAS,IAAD,EAEtDmC,GAAiB,OAATwN,QAAS,IAATA,OAAA,EAAAA,EAAY3P,MAAZ,OAAoBuF,QAApB,IAAoBA,GAApB,UAAoBA,EAAMoK,iBAA1B,aAAoB,EAAkB3P,IAClD,GAAIA,EAAIsN,WAAW,OAAQ,CACzB,IAAMwC,EAAa9P,EAAIuN,MAAM,GAC7BpL,EAAQgB,EAAO2M,GAAcC,OAAO5M,EAAO2M,IAAe3N,EAI5D,OAAOA,GAAgB0N,OAK3B,CAACtK,EAAMrE,EAAUiC,IAiJnB,GAhBAZ,qBAAU,WACR,GAAIgD,EAAM,CAERyK,SAASC,MAAQvL,EAAca,EAAK0K,OAGpC,IAAIC,EAAcF,SAASG,cAAc,4BACpCD,KACHA,EAAcF,SAASI,cAAc,SACzBC,aAAa,OAAQ,eACjCL,SAASM,KAAKC,YAAYL,IAE5BA,EAAYG,aAAa,UAAW3L,EAAca,EAAK2K,iBAExD,CAAC3K,EAAMb,IAENiK,EAAqB,CACvB,IAAM6B,EAAO,kDAGf7B,EAAoBU,QAHL,eAKfV,EAAoB5M,MAAQ,MAAQF,KAAKQ,UAAUsM,EAAoB5M,MAAO,KAAM,GAAK,MAAQ,IAE/F,OACE,kBAAC,EAAD,CACE/D,OAAQ,CAAEwC,SAAU,SAAUiQ,WAAY,QAC1CvH,IAAK,CAAEuH,WAAY,SAAUjQ,SAAU,SACvC3B,MAAO,CAAEyN,IAAK,UAEd,kBAAChO,EAAA,EAAD,CAAK4K,IAAI,UACP,kBAAC,EAAD,KAAWsH,KAMnB,IAAKjL,EACH,OACE,kBAACjH,EAAA,EAAD,CAAK4K,IAAI,UACP,kBAAC,EAAD,OAKN,IAAM/G,EAAmB,CACvBoD,OACApC,SACAC,SA1Oe,SAACJ,EAAoBb,GACpC,IAAMuO,OAAsBxS,IAAViE,EAAA,eAA2BgB,EAA3B,eAAoCH,EAASK,GAAKlB,IAAUwO,gBAAKxN,EAAQH,EAASK,IACpGgL,EAAUqC,GAF2C,QAQFjF,GAAgBzI,EAAUb,EAAOgB,EAAQoC,GAA5EqL,EARqC,EAQ7C5M,OAA0B2H,EARmB,EAQnBA,aAC9BkF,EACFD,EAAiB5C,OAAS,EAA1B,eAAmChK,EAAnC,eAA4ChB,EAASK,GAAKuN,IAAqBD,gBAAK3M,EAAQhB,EAASK,IAGjGyN,EAAOvL,EAAMwL,MAAMtC,GAb4B,cAcnC9C,GAdmC,yBAc1CqF,EAd0C,QAenD,QAAoB9S,IAAhBiF,EAAO6N,GAAoB,CAC7B,IAAMC,EAAI7G,GAAsB0G,EAAKzG,UAAWlH,GAAQwJ,MAAK,SAACsE,GAAD,OAAOA,EAAE5N,KAAO2N,KAG7DE,EAAczF,GAAgBwF,EAAG9N,EAAO6N,GAAMN,EAAWnL,GAAjEvB,OACR6M,EAAYK,EAAUlD,OAAS,EAAnB,eAA4B6C,EAA5B,eAAwCI,EAAE5N,GAAK6N,IAAcP,gBAAKE,EAAWI,EAAE5N,MAN/F,2BAAiC,IAdoB,8BAuBrDiL,EAAUuC,GAEV,IAAMM,EH3HH,SAAqBL,EAAY3N,EAAgBa,GACtD,IAAK8M,EACH,OAAO,EAGT,IAAMzG,EAAYD,GAAsB0G,EAAKzG,UAAWlH,GAClDiO,EAAc/G,EAAU/J,KAAI,SAAC2Q,GAAD,OAAOA,EAAE5N,MAE3C,OAD0BgH,EAAUnE,QAAO,SAAC+K,GAAD,OAAOA,EAAEvF,YAAUpL,KAAI,SAAC2Q,GAAD,OAAOA,EAAE5N,MAClDgO,OAAM,SAAChO,GAAD,YAAuBnF,IAAfiF,EAAOE,QAAuB+N,EAAYtE,MAAK,SAACzJ,GAAD,OAAQW,EAAOX,MGmHvEiO,CAAYR,EAAMJ,EAAWG,GACzDrC,EAAc,eACTD,EADQ,eAEVE,EAAY0C,MA+MfnN,SACAkK,SA7Oe,SAAClO,EAAamC,GAAd,OAAgCmM,EAAU,eAAKtK,EAAN,eAAehE,EAAMmC,MA8O7EuC,gBACA8C,cAlLoB,SAACnE,EAAYsM,GACjC,OAAOjL,EAAca,EAAMC,aAAanC,GAAKsM,IAkL7CpB,aACAE,YACA8C,QAjLc,SAACC,GACf9C,EAAa8C,GACb9P,OAAO+P,SAAS,EAAG,KAkLrB,OAAO,kBAACvO,GAAYL,SAAb,CAAsBV,MAAOA,GAAQlF,EAAMmB,WC/V9CsT,GAAY,CAChB,CAAEzB,MAAO,UAAW9N,MAAO,MAC3B,CAAE8N,MAAO,eAAM9N,MAAO,MACtB,CAAE8N,MAAO,aAAW9N,MAAO,OAwGdwP,GArGkB,SAAC1U,GAAW,IACnC8T,EAAU9T,EAAV8T,MADkC,EAEsB9N,qBAAWC,IAAnEsE,EAFkC,EAElCA,cAAejC,EAFmB,EAEnBA,KAAMkJ,EAFa,EAEbA,UAAW8C,EAFE,EAEFA,QAAShD,EAFP,EAEOA,WAFP,EAGRtL,qBAAW7B,GAArCF,EAHkC,EAGlCA,SAAUC,EAHwB,EAGxBA,YACZf,EAAO6C,qBAAW2O,KAElBC,EAAcd,EAAMtC,GACpBqD,EAAUC,KAAKC,MAAOvD,GAAasC,EAAM/C,OAAS,GAAM,KAExDiE,EAAe,SAACvI,GACpB,OAAOwI,iBAAM,EAAGxI,GAAG2H,OAAM,SAACG,GAAD,OAAWjD,EAAWiD,OAGjD,OACE,kBAAClT,EAAA,EAAD,CACEgJ,KAAM,CAAE6K,OAAQ,GAChBnU,OAAiB,UAAToC,EAAmB,CAAE2E,IAAK,SAAY,CAAEyE,KAAM,SACtDG,UAAU,SACV9K,MAAgB,UAATuB,EAAmB,OAAS,SAEnC,kBAAC,EAAD,CAAMpC,OAAQ,CAAEsL,OAAQ,SAAWJ,IAAK,CAAEuH,WAAqB,UAATrQ,EAAmB,OAAS,SAAUI,SAAU,UACpG,kBAAC,EAAD,KAAWgH,EAAc,kBAE3B,kBAAC,EAAD,CAAM0B,IAAI,UACP3D,EAAK6M,MACJ,kBAAC9T,EAAA,EAAD,CAAKN,OAAQ,CAAEsL,OAAQ,WACrB,kBAACM,EAAA,EAAD,CAAOC,IAAKtE,EAAK6M,KAAM5U,MAAO,CAAE6U,UAAW,QAAS7O,SAAU,OAAQ8O,UAAW,cAGrF,kBAAChU,EAAA,EAAD,KACE,kBAACiU,EAAA,EAAD,CAASC,MAAO,EAAGxU,OAAO,QACvBwJ,EAAc,aAEjB,kBAAC,EAAD,CACE1C,UAAU,kBACV9G,OAAQ,CAAE+G,IAAK,UACfJ,QAAS+M,GACT1M,SAAS,QACTC,SAAU,CAAEjF,IAAK,QAASkF,QAAQ,GAClC/C,MAAOjB,EACPuC,SAAU,gBAAGtB,EAAH,EAAGA,MAAH,OAAehB,EAAYgB,OAGzC,kBAAC7D,EAAA,EAAD,CAAKN,OAAQ,CAAE+G,IAAK,WAClB,kBAACzG,EAAA,EAAD,CAAKqL,UAAU,MAAMlK,QAAQ,WAC3B,kBAAC8S,EAAA,EAAD,CAASC,MAAO,EAAGxU,OAAO,QACvBwJ,EAAc,aAEjB,kBAACzJ,EAAA,EAAD,CAAWC,OAAO,QAAQ8T,EAA1B,MAEF,kBAACxT,EAAA,EAAD,CACEN,OAAQ,CAAE+G,IAAK,UACfvH,MAAO,CAAEqB,MAAO,OAAQC,OAAQ,OAAQL,aAAc,OAAQF,WAAY,YAE1E,kBAACD,EAAA,EAAD,CAAKd,MAAO,CAAEqB,MAAM,GAAD,OAAKiT,EAAL,KAAiBhT,OAAQ,OAAQL,aAAc,OAAQF,WAAY,eAG1F,kBAACD,EAAA,EAAD,CAAKN,OAAQ,CAAE+G,IAAK,WACR,UAAT3E,GAAoB2Q,EAAM/C,OAAS,EAClC,oCAEE,kBAACuE,EAAA,EAAD,CAASC,MAAO,EAAGxU,OAAO,QACvBwJ,EAAc,YAEjB,kBAAC,EAAD,CACE1C,UAAU,iBACV9G,OAAQ,CAAE+G,IAAK,UACfJ,QAASoM,EAAMzQ,KAAI,SAACwQ,EAAMpH,GAAP,MAAc,CAAEoH,OAAMpH,IAAG+I,UAAWR,EAAavI,OACpE1E,SAAS,OACTC,SAAU,CAAEjF,IAAK,IAAKkF,QAAQ,GAC9BwN,YAAY,WACZvQ,MAAOsM,EAEPhL,SAAU,gBAAUiG,EAAV,EAAGvH,MAAH,OAAkBoP,EAAQ7H,OAKxCqH,EAAMzQ,KAAI,SAACwQ,EAAMpH,GACf,OACE,kBAACiJ,EAAA,EAAD,CACEnV,MAAO,CACL6L,OAAQ4I,EAAavI,GAAK,UAAY,cACtC3K,QAAS8S,IAAgBf,EAAO,OAASmB,EAAavI,GAAK,MAAQ,OAGrEO,QAAS,kBAAMsH,EAAQ7H,IACvB1L,OAAQ,CAAEsL,OAAQ,UAClBtJ,IAAK8Q,GAEJA,UCjGb8B,GAAqC,SAAC3V,GAC1C,OACE,yBACE4V,UAAW5V,EAAMoH,KAAO,kBAAenG,EACvCW,MAAM,IACNC,OAAO,KACPF,QAAQ,WACRtB,KAAK,OACLwV,MAAM,8BAEN,0BAAM9T,EAAE,gBAAgB+T,OAAO,UAAUC,YAAY,QAKrDC,GACJ,yBAAKpU,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAYtB,KAAK,OAAOwV,MAAM,8BAChE,0BACEI,SAAS,UACTC,SAAS,UACTnU,EAAE,+RACF1B,KAAK,aAuGI8V,GAlGkB,SAACnW,GAAW,IACnC8T,EAA2B9T,EAA3B8T,MAAO5N,EAAoBlG,EAApBkG,OAAQoO,EAAYtU,EAAZsU,QACf7M,EAAkBzB,qBAAWC,IAA7BwB,cAFkC,EAIFlD,mBAAkC,IAJhC,mBAInC6R,EAJmC,KAIrBC,EAJqB,OAKR9R,mBAAkC,IAL1B,mBAKnC+R,EALmC,KAKxBC,EALwB,KAgB1C,OACE,kBAAClV,EAAA,EAAD,CAAKN,OAAQ,CAAE+G,IAAK,UAAYvG,OAAQ,CAAE6I,MAAO,UAC9C0J,EAAMzQ,KAAI,SAACwQ,EAAMpH,GAChB,IAAM3D,EAAUsN,EAAa3J,KAAM,EACnC,OACE,kBAAC,WAAD,CAAU1J,IAAK8Q,EAAKb,MAAMxN,IACxB,kBAACnE,EAAA,EAAD,CACEC,WAAW,UACXf,MAAO,CACLiW,aAAc,mBAEhBxJ,QAAS,kBAlBGwE,EAkBkB/E,OAjBxC8J,EAAa,eACRD,EADO,eAET9E,GAAa8E,EAAU9E,MAHL,IAACA,GAmBZ9E,UAAU,MACVlK,QAAQ,UACRD,MAAM,SACNQ,IAAK0E,EAAcoM,EAAKb,OACxB/G,IAAK,CAAEuH,WAAY,SAAUjQ,SAAU,UAEvC,kBAAClC,EAAA,EAAD,CAAKqL,UAAU,OACb,kBAACrL,EAAA,EAAD,CACEN,OAAQ,CAAE8L,MAAO,QACjBrK,QAAQ,SACRD,MAAM,SACNV,OAAO,OACPD,MAAM,OACNN,WAAYwH,EAAU,UAAY,UAClCvI,MAAO,CAAEgB,OAAQuH,EAAU,mBAAqB,oBAAqBtH,aAAc,QAElFsH,GACC,kBAAC4M,EAAA,EAAD,CAAMtL,MAAM,QAAQqM,OAAO,QAA3B,WAKJ,kBAACnB,EAAA,EAAD,CAASvU,OAAO,OAAOwU,MAAO,GAC3B9N,EAAcoM,EAAKb,SAGxB,kBAAC,GAAD,CAAO5L,KAAMkP,EAAU7J,MAExB6J,EAAU7J,IACT,kBAACpL,EAAA,EAAD,CAAK4K,IAAK,CAAEuH,WAAY,OAAQjQ,SAAU,QAAUhD,MAAO,CAAEiW,aAAc,oBACxE3C,EAAKzG,UAAU/J,KAAI,SAAC2Q,GACnB,IAAM9O,EAAmB,SAAX8O,EAAE/R,KAAkBoE,IAAOH,EAAO8N,EAAE5N,KAAaO,OAAO,aAAeT,EAAO8N,EAAE5N,IAC9F,OACE,kBAAC/E,EAAA,EAAD,CAAK0B,IAAKiR,EAAE5N,GAAIsG,UAAU,MAAM3L,OAAQ,CAAEsL,OAAQ,SAChD,kBAACqJ,EAAA,EAAD,CAAMvS,KAAK,OAAOpC,OAAQ,CAAE8L,MAAO,OAAS4J,OAAQ,KACjDhP,EAAcuM,EAAEpM,MADnB,KAGA,kBAAC8N,EAAA,EAAD,CAAMvS,KAAK,QAAQ+B,OAIzB,kBAAC7D,EAAA,EAAD,CACE4K,IAAK,CAAEnE,IAAK,SACZ/G,OAAQ,CAAE+G,IAAK,UACf4E,UAAU,MACVlK,QAAQ,UACRjC,MAAO,CAAEmW,UAAW,oBAEpB,kBAACrV,EAAA,EAAD,KACE,kBAACuH,EAAA,EAAD,CAAUE,QAASA,EAASkE,QAAS,kBAtElCwE,EAsEoD/E,EAtE9B4J,EAAgB,eAAKD,EAAN,eAAqB5E,GAAa4E,EAAa5E,MAArF,IAACA,GAsEwDvR,MAAM,gCAEnE,kBAACyV,EAAA,EAAD,CACEnV,MAAO,CAAE6L,OAAQ,WACjBY,QAAS,kBAAMsH,EAAQ7H,EAAI,IAC3BtJ,KAAK,OACLiH,MAAM,UACNvC,UAAS,eAAUgM,EAAKb,QAL1B,QAOQgD,YC9FXW,GAnBiB,SAAC3W,GAAW,IAClC8T,EAAU9T,EAAV8T,MADiC,EAEE9N,qBAAWC,IAA9CC,EAFiC,EAEjCA,OAAQqE,EAFyB,EAEzBA,cAAe+J,EAFU,EAEVA,QAGzBrH,EAAmB,UAFZjH,qBAAW2O,KAEW,OAAS,OAC5C,OACE,kBAACtT,EAAA,EAAD,CAAK4K,IAAK,CAAEuH,WAAYvG,EAASnF,IAAKmF,EAASZ,OAAQ,QAAUK,UAAU,SAASlK,QAAQ,SAC1F,kBAAC8S,EAAA,EAAD,CAASvU,OAAO,OAAOwU,MAAO,GAC3BhL,EAAc,WAGjB,kBAAC,EAAD,CAAUpH,KAAK,SAASoH,EAAc,wBAEtC,kBAAC,GAAD,CAAS+J,QAASA,EAASpO,OAAQA,EAAQ4N,MAAOA,M,oBCTzC8C,GAZG,CAChBC,mBAAoB,YACpBC,uBAAwB,CACtB,CACElP,KAAM,cAENmP,SAAU,wBACVC,OAAQ,e,yCCCDC,GAAgC,SAACjX,GAAW,IAAD,EACtBgG,qBAAWC,IAAnCsE,EAD8C,EAC9CA,cAAejC,EAD+B,EAC/BA,KAavB,OACE,kBAACjH,EAAA,EAAD,CAAKqL,UAAU,SAASlK,QAAQ,SAE9B,kBAACnB,EAAA,EAAD,CAAK4K,IAAK,CAAEuH,WAAY,OAAQ1L,IAAK,OAAQuE,OAAQ,SACnD,kBAACiJ,EAAA,EAAD,CAASvU,OAAO,OAAOwU,MAAO,GAC3BhL,EAAc,yBAEjB,kBAAC,EAAD,KACGA,EAAc,4BAA6B,CAQ1C,gBAAiB,OACjB,eAAgB,UAKtB,kBAAClJ,EAAA,EAAD,CACEC,WAAY,CAAE8I,MAAO,WACrBsC,UAAU,MACVT,IAAK,CAAEuH,WAAY,OAAQjQ,SAAU,QACrCf,QAAQ,WAER,kBAACnB,EAAA,EAAD,CAAKqL,UAAU,UACb,kBAAC5L,EAAA,EAAD,CAAWqC,KAAK,QAAQpC,OAAQ,CAAE+G,IAAK,OAAQuE,OAAQ,UACpD9B,EAAc,wBAEjB,kBAACzJ,EAAA,EAAD,CAAWqC,KAAK,QAAQpC,OAAO,QAC5Bf,EAAMoG,KAGX,kBAAC/E,EAAA,EAAD,CAAKQ,OAAO,OAAOW,QAAQ,SAASyJ,IAAK,CAAEnE,IAAK,SAC9C,kBAAC,EAAD,CACEkF,QAjDK,WACbyF,KAAKzS,EAAMoG,KAiDHnG,MAAOsK,EAAc,QACrB7J,SAAS,EACTJ,IAAI,QACJE,KACE,kBAACa,EAAA,EAAD,CAAKO,MAAM,QACT,kBAACsV,GAAA,EAAD,CAAW/T,KAAK,eAO1B,kBAAC9B,EAAA,EAAD,CAAKd,MAAO,CAAE4W,SAAU,YAAcpW,OAAQ,CAAEwC,SAAU,QAAUmJ,UAAU,OAC5E,kBAACrL,EAAA,EAAD,CACEd,MAAO,CACL4W,SAAU,WACVtV,OAAQ,OACRD,MAAO,MACPwV,gBAAiB,aAGrB,kBAAC/V,EAAA,EAAD,CAAK4K,IAAK,CAAE1I,SAAU,OAAQiQ,WAAY,SACxC,kBAAC,EAAD,KAAWjJ,EAAc,2BAI7B,kBAAClJ,EAAA,EAAD,CAAKqL,UAAU,MAAMlK,QAAQ,UAAUzB,OAAQ,CAAEyS,WAAY,OAAQjQ,SAAU,SAC7E,kBAAClC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACE,kBAAC,EAAD,CAAQjB,SAAS,EAAM4M,QA3EhB,WAAO,IAAD,EACbqK,EAAM,UAAG/O,EAAKoK,iBAAR,aAAG,SACX2E,IACF5S,OAAO6S,SAASC,KAAhB,kBAAkCF,KAwEUpX,MAAOsK,EAAc,qBAAsBpH,KAAK,cCtCnFqU,GA7CmB,SAA5BA,EAA6BxX,GAAW,IAAD,ETgEhBiC,ES/DnB8D,EAAa/F,EAAb+F,SACF0R,GT8DqBxV,ES9DI8D,EAAS9D,KT+DjCwL,GAAsBxL,IAAS6E,GSjEK,EAIcd,qBAAWC,IAA5DC,EAJmC,EAInCA,OAAQa,EAJ2B,EAI3BA,OAAQU,EAJmB,EAInBA,cAAe8C,EAJI,EAIJA,cAEjCrF,EAAQgB,EAAOH,EAASK,IACxBtB,EAAQiC,EAAOhB,EAASK,IAE9B,OACE,kBAAC/E,EAAA,EAAD,CAAKqL,UAAU,SAAS3L,OAAQ,CAAEsL,OAAQ,UACxC,kBAAChL,EAAA,EAAD,CAAKhB,MAAM,EAAMU,OAAQ,CAAEsL,OAAQ,UACjC,kBAAChL,EAAA,EAAD,CAAKqL,UAAU,MAAMnK,MAAM,SACzB,kBAAC+S,EAAA,EAAD,CACE/U,MAAO,CACLgG,SAAU,QAEZgP,MAAO,EACPxU,OAAO,QAEN0G,EAAc1B,EAAS6B,OACtB7B,EAAS0I,WAAa,CAAC,qBAAqB9F,SAAS5C,EAAS9D,OAC9D,iCAAOsI,EAAc,YAArB,OAILxE,EAASwC,cAAgB,kBAAC,EAAD,CAAUpF,KAAK,SAASsE,EAAc1B,EAASwC,gBAE3E,kBAACkP,EAAD,CAAW1R,SAAUA,IACpBjB,GACC,kBAACzD,EAAA,EAAD,KACGyD,EAAMzB,KAAI,SAAC6D,GAAD,OACT,kBAACwO,EAAA,EAAD,CAAM3S,IAAKmE,EAAE1B,GAAIzE,OAAQ,CAAE+G,IAAK,UAAYsC,MAAM,WAC/C3C,EAAcP,QAKvB,kBAAC7F,EAAA,EAAD,CAAKN,OAAQ,CAAE+G,IAAK,WACjB/B,EAASwH,SAAT,UAAmBxH,EAASwH,OAAOrI,UAAnC,aAAmB,EAAkC7B,KAAI,SAAC2Q,GAAD,OAAO,kBAACwD,EAAD,CAAUzR,SAAUiO,EAAGjR,IAAKiR,EAAE5N,Y,oBCrCvGsR,WAAQC,UAAUC,IAElB,IAoGeC,GApGY,WAAO,IAAD,EACwD7R,qBAAWC,IAA1FqC,EADuB,EACvBA,KAAMiC,EADiB,EACjBA,cAAe9C,EADE,EACFA,cAAe6J,EADb,EACaA,WAAYE,EADzB,EACyBA,UAAW8C,EADpC,EACoCA,QAASpO,EAD7C,EAC6CA,OACtE/C,EAAO6C,qBAAW2O,KAFO,EAIGpQ,oBAAS,GAJZ,mBAIxBuT,EAJwB,KAIbC,EAJa,OAKDxT,qBALC,mBAKxByT,EALwB,KAKfC,EALe,KAOzBC,EAAQ,uCAAG,4BAAArU,EAAA,6DACfkU,GAAa,GADE,kBASMI,KAAIC,KAAK,cAAe,UAAW,CACpDC,KAAM,CACJC,SAAU,CACRC,KAAMA,aAAK9T,OAAO6S,SAASkB,SAAUD,KAAKE,KAC1CC,UAAW,IAAIC,KACfC,KAAMnU,OAAO6S,SAASkB,UAExBpL,UAAWlH,KAhBF,OASP2S,EATO,OAmBb9T,QAAQ+T,IAAID,GACZZ,EAAWY,EAAKzS,IApBH,gDAsBb2R,GAAa,GACbhT,QAAQD,MAAMF,KAAKQ,UAAU,KAAI2T,SAASC,KAAM,KAAM,IAvBzC,yDAAH,qDA2BRC,EAAU,sBAAO3Q,EAAKwL,MAAMzQ,KAAI,SAACwQ,GAAD,OAAUpM,EAAcoM,EAAKb,WAAnD,CAA4DzI,EAAc,YAEpF0C,EAAmB,UAAT9J,EAAmB,OAAS,OACtC+V,EAAc,sBACf5Q,EAAKwL,MAAMzQ,KAAI,SAACwQ,GAAD,OAChB,kBAACxS,EAAA,EAAD,CACE4K,IAAK,CAAEuH,WAAYvG,EAASnF,IAAKmF,EAASZ,OAAQ,QAClDK,UAAU,SACVlK,QAAQ,QACRO,IAAK8Q,EAAKsF,QAAQ3T,IAElB,kBAAC8P,EAAA,EAAD,CAASvU,OAAO,OAAOwU,MAAO,GAC3B9N,EAAcoM,EAAKsF,UAErBtF,EAAKtL,cAAgB,kBAAC,EAAD,CAAUpF,KAAK,SAASsE,EAAcoM,EAAKtL,eACjE,kBAAClH,EAAA,EAAD,CAAKN,OAAQ,CAAEsL,OAAQ,YACtBwH,EAAKzG,UAAU/J,KAAI,SAAC0C,GAAD,OAClB,kBAAC,GAAD,CAAUA,SAAUA,EAAUhD,IAAKgD,EAASK,aAdhC,CAkBlB,kBAAC,GAAD,CAAQrD,IAAI,SAAS+Q,MAAOxL,EAAKwL,UAMnC,OACE,kBAACzS,EAAA,EAAD,CAAKkB,MAAM,SAAS0J,IAAI,SAASS,UAAU,SAAS9K,MAAM,OAAOrB,MAAO,CAAEgG,SAAU,WAClF,kBAAClF,EAAA,EAAD,CAAKO,MAAM,OAAOC,OAAO,OAAOW,QAAQ,SAASkK,UAAoB,UAATvJ,EAAmB,SAAW,OACxF,kBAAC,EAAD,CAAM8I,IAAI,SAASzJ,QAAQ,UAAU6H,KAAM,CAAE+O,KAAM,EAAGlE,OAAQ,IAC1D8C,GAAW,kBAAC,GAAD,CAAc5R,GAAI4R,KAC7B,oCACGkB,EAAe1H,GAChB,kBAACnQ,EAAA,EAAD,CAAKmB,QAAQ,UAAUyJ,IAAI,SAASS,UAAU,OAC1C8E,EAAY,GACZ,kBAAC,EAAD,CAAQxE,QAXJ,kBAAMsH,EAAQ9C,EAAY,IAWAvR,MAAOsK,EAAc,QAAS/J,KAAM,kBAAC6Y,GAAA,EAAD,SAC9D,kBAAChY,EAAA,EAAD,MACLmQ,EAAY,EAAIyH,EAAWlI,QAC1B,kBAAC,EAAD,CACE3Q,QAAuB,IAAdoR,EACTxE,QAjBE,kBAAMsH,EAAQ9C,EAAY,IAkB5BgE,UAAWlE,EAAWE,GACtBhR,KAAM,kBAAC8Y,GAAA,EAAD,MACN5Y,SAAS,EACTT,MAAyBsK,EAAJ,IAAdiH,EAAgC,cAA+B,UAGzEA,IAAcyH,EAAWlI,OAAS,GACjC,kBAAC,EAAD,CACE3Q,SAAS,EACT4M,QAASkL,EACT1C,UAAWsC,EACX7X,MAAOsK,EAAc,sBAOjC,kBAAC,GAAD,CAASuJ,MAAOmF,OCvGXM,GAAiB,SAACvZ,GAK7B,OACE,kBAACqB,EAAA,EAAD,CAAKqL,UAAU,SAAS7K,OAAQ,CAAEuN,IAAK,UACrC,kBAAC/N,EAAA,EAAD,KACE,kBAAC,GAAD,OAGF,kBAACA,EAAA,EAAD,CAAKgJ,KAAM,CAAE+O,KAAM,GAAK7W,MAAM,UAC3BvC,EAAMmB,UAGT,kBAACE,EAAA,EAAD,KACE,kBAAC,GAAD,SAMFmY,GAAmB,WACvB,OACE,kBAACnY,EAAA,EAAD,CAAKC,WAAY,CAAE8I,MAAO,WAAaqP,UAAU,SAASlX,MAAM,UAC9D,kBAAClB,EAAA,EAAD,CACEO,MAAM,OACNY,QAAQ,QACRjC,MAAO,CAAEgG,SAAU,UACnB0F,IAAK,CAAEuH,WAAY,SAAUjQ,SAAU,QACvCmJ,UAAU,MACVnK,MAAM,UAEN,uBAAGgV,KAAK,qCAAqCzT,OAAO,SAASC,IAAI,sBAAsB2V,UAAW,GAChG,kBAAC/M,EAAA,EAAD,CAAOpM,MAAO,CAAE+L,QAAS,SAAW1K,MAAM,OAAOgL,IAAI,qBAAqB7L,OAAQ,CAAE8L,MAAO,WAE7F,kBAACyI,EAAA,EAAD,CAASC,MAAO,EAAGxU,OAAO,QAA1B,4CAQF4Y,GAAmB,WACvB,OACE,kBAACtY,EAAA,EAAD,CAAKC,WAAY,CAAE8I,MAAO,WAAaqP,UAAU,SAASlX,MAAM,UAC9D,kBAAClB,EAAA,EAAD,CACEO,MAAM,OACNY,QAAQ,QACRjC,MAAO,CAAEgG,SAAU,UACnB0F,IAAK,CAAEuH,WAAY,SAAUjQ,SAAU,QACvCmJ,UAAU,MACVnK,MAAM,UAEN,kBAACzB,EAAA,EAAD,CAAWP,MAAO,CAAES,WAAY,KAAOmC,KAAK,SAA5C,YAGA,uBAAGoU,KAAK,qCAAqCzT,OAAO,SAASC,IAAI,sBAAsB2V,UAAW,GAChG,kBAAC/M,EAAA,EAAD,CACEpM,MAAO,CAAE+L,QAAS,SAClB1K,MAAM,QACNgL,IAAI,6BACJ7L,OAAQ,CAAEyS,WAAY,WAG1B,kBAAC1S,EAAA,EAAD,CAAWqC,KAAK,SAAhB,0DChEFyW,GACI,OADJA,GAEO,OAFPA,GAGE,OAIFC,GAAQ,CACZC,OAAQ,CACNC,OAAQ,CACNjI,KAAM,CACJkI,KAAM,QACNC,MAAO,UAGXC,MAAO,CACL3Y,OAAQ,CACN6I,MAAO,YAGX0H,KAAM,CACJvP,MAAO,QAET4X,SAAU,CACR7Y,WAAY,UACZ8I,MAAO,SAETgQ,QAAS,CACP7Y,OAAQ,CACN6I,MAAO,QACPiQ,OAAQ,SAIdC,UAAW,CACTC,MAAO,CAAEpX,KA/BH,QAgCNqX,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBT,QAAS,CACP5D,MAAO,CACLqF,EAAG,CACDL,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBiB,EAAG,CACDN,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBkB,EAAG,CACDP,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBmB,EAAG,CACDR,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBoB,EAAG,CACDT,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,KAEnBqB,EAAG,CACDV,MAAO,CAAEpX,KAAMyW,IACfY,OAAQ,CAAErX,KAAMyW,IAChBa,MAAO,CAAEtX,KAAMyW,IACfc,OAAQ,CAAEvX,KAAMyW,IAChBe,QAAS,CAAExX,KAAMyW,OAIvBsB,OAAQ,CACNC,MAAO,CACL/Q,MAAO,WAET1C,QAAS,CACPoK,KAAM,CACJ1H,MAAO,UAGXgR,UAAW,CACT5Z,aAAc,QAGlB6Z,OAAQ,CACN9Z,OAAQ,CACN6I,MAAO,eAEThK,QAAS,CACPgK,MAAO,YAGXkR,SAAU,CACRlR,MAAO,UACPmR,MAAO,CACLnR,MAAO,aAoBEoR,OAff,WAEE,OACE,kBAACC,EAAA,EAAD,CAAStb,UAAU,MAAM0Z,MAAOA,IAC9B,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,WCvHQ5S,QACW,cAA7BxC,OAAO6S,SAASkB,UAEe,UAA7B/T,OAAO6S,SAASkB,UAEhB/T,OAAO6S,SAASkB,SAASkD,MAAM,2DCXnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF9I,SAAS+I,eAAe,SDuHpB,kBAAmBnW,WACrBA,UAAUoW,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEd7J,OAAM,SAACxN,GACNC,QAAQD,MAAMA,EAAMsN,c","file":"static/js/main.3f40bf6b.chunk.js","sourcesContent":["import React from 'react'\nimport { Button as GrommetButton, ButtonProps, Paragraph } from 'grommet'\n\nconst Button: React.FC<ButtonProps & Omit<JSX.IntrinsicElements['button'], 'color'>> = (props) => {\n  const { label, ...rest } = props\n\n  return (\n    <GrommetButton\n      className={props.primary ? 'primary-button' : 'default-button'}\n      fill={false}\n      gap=\"xxsmall\"\n      style={\n        props.icon\n          ? {\n              paddingLeft: props.reverse ? '24px' : '12px',\n              paddingRight: props.reverse ? '12px' : '24px',\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n          : {\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n      }\n      label={\n        label ? (\n          <Paragraph margin=\"none\" style={{ fontWeight: 500 }}>\n            {label}\n          </Paragraph>\n        ) : undefined\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\n\nconst Card: React.FC<BoxProps> = (props) => {\n  const { children, ...otherProps } = props\n  return (\n    <Box\n      className=\"card\"\n      background=\"#FFFFFF\"\n      style={{\n        border: '2px solid #CCCCCC',\n        borderRadius: '8px',\n      }}\n      {...otherProps}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default Card\n","// https://codesandbox.io/s/loaders-and-spinners-4jltk?file=/components/Spinner/SpinnerBrand.js:0-719\n\nimport React from 'react'\nimport { Box } from 'grommet'\n\nconst spinning = (\n  <svg version=\"1.1\" viewBox=\"0 0 32 32\" width=\"28px\" height=\"28px\" fill=\"#7D4CDB\">\n    <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n)\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n)\n","export function merge(...sources: Record<string, any>[]) {\n  const result: Record<string, any> = {}\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      if (source[key]) {\n        result[key] = source[key]\n      }\n    }\n  }\n\n  return result\n}\n","import React from 'react'\nimport { Markdown as GrommetMarkdown, Paragraph, ParagraphProps } from 'grommet'\nimport { MarginType } from 'grommet/utils'\nimport { merge } from '../../lib/merge'\n\nconst ListItem: React.FC = ({ children, ...styleProps }) => {\n  return (\n    <li>\n      <Paragraph fill={true} margin=\"none\" {...styleProps}>\n        {children}\n      </Paragraph>\n    </li>\n  )\n}\n\ninterface Props {\n  size?: ParagraphProps['size']\n  margin?: MarginType\n}\n\nexport const Markdown: React.FC<Props> = ({ margin, size, children }) => {\n  // Grommet allows you to override what React component is used for various\n  // HTML elements. It handles a few components by default, but there are a few\n  // extra cases we want to handle (or customize).\n  const headings = [1, 2, 3, 4, 5, 6].map((n) => ({\n    [`h${n}`]: { props: merge({ margin: { vertical: 'small' } }, { merge, size }) },\n  }))\n  return (\n    <GrommetMarkdown\n      components={merge(\n        {\n          li: {\n            component: ListItem,\n            props: merge({ margin, size }),\n          },\n          p: {\n            component: Paragraph,\n            props: merge({ fill: true }, { margin, size }),\n          },\n          span: {\n            component: Paragraph,\n            props: merge({ fill: true, size: 'small' }, { margin, size }),\n          },\n          a: {\n            props: { target: '_blank', rel: 'noopener noreferrer' },\n          },\n        },\n        ...headings\n      )}\n    >\n      {children}\n    </GrommetMarkdown>\n  )\n}\n","import React, { createContext, useEffect } from 'react'\nimport { useLocalStorage } from '../hooks/useLocalStorage'\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  language: 'en',\n  setLanguage: (language: string) => {},\n}\nexport const LanguageContext = createContext(initialState)\n\nexport const LanguageProvider: React.FC = (props) => {\n  const [language, setLanguage] = useLocalStorage<string>('papua-selected-language', initialState.language)\n\n  // Check the user's browser's language and automatically match that.\n  useEffect(() => {\n    const codeMap: Record<string, string> = {\n      en: 'en',\n      'en-US': 'en',\n      'en-GB': 'en',\n      es: 'es',\n      zh: 'zh',\n    }\n    const detectedLanguageCode = codeMap[navigator.language]\n\n    if (detectedLanguageCode && !language) {\n      setLanguage(detectedLanguageCode)\n    }\n  }, [language, setLanguage])\n\n  const value = { language: language, setLanguage }\n  return <LanguageContext.Provider value={value}>{props.children}</LanguageContext.Provider>\n}\n","import { useState } from 'react'\n\n// Copied from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      console.error(error)\n      return defaultValue\n    }\n  })\n\n  const setValue = (value: T) => {\n    try {\n      setStoredValue(value)\n      window.localStorage.setItem(key, JSON.stringify(value))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { useContext } from 'react'\nimport ReactDatePicker from 'react-date-picker'\nimport './date-picker.css'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport moment from 'moment'\nimport { Box } from 'grommet'\n\nconst DatePicker: React.FC<{ question: Question }> = (props) => {\n  const { question } = props\n  const { values, setValue } = useContext(FormContext)\n  const value = values[question.id] as string | undefined\n\n  let v: Date | undefined\n  if (value) {\n    v = moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).toDate()\n  }\n\n  const onChange = (date: Date | Date[]) => {\n    if (!date) {\n      setValue(question, undefined)\n      return\n    }\n\n    setValue(question, moment.utc(date as Date).format('YYYY-MM-DDTHH:mm:ssZ'))\n  }\n\n  /**\n   * TODO:\n   * - Would be nice if delete moved your cursor to the previous date chunk\n   *   for example, pressing delete again after having deleted the year\n   *   should move your cursor to the end of your day value.\n   * - On mobile, the keyboard pops up. Good/bad??\n   * - On defocus, the calendar needs to hide.\n   */\n\n  return (\n    <Box style={{ maxWidth: '600px' }}>\n      <ReactDatePicker className=\"date-picker\" onChange={onChange} value={v} clearIcon={null} calendarIcon={null} />\n    </Box>\n  )\n}\n\nexport default DatePicker\n","import React, { useContext } from 'react'\nimport { TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst TextInput: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const value = values[question.id]\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <GrommetTextInput\n      className={hasError ? 'text-input errored' : 'text-input'}\n      value={(value as string) || ''}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(question, e.target.value)}\n      style={{ maxWidth: '600px' }}\n    />\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { Select as GrommetSelect, Box, SelectProps } from 'grommet'\n\nexport const StyledSelect: React.FC<SelectProps> = (props) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Box style={{ maxWidth: '600px' }} className={open ? 'dropdown dropdown-open' : 'dropdown'}>\n      <GrommetSelect onOpen={() => setOpen(true)} onClose={() => setOpen(false)} {...props} />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { StyledSelect } from '../helper-components/StyledSelect'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n}\n\nconst Select: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id]\n\n  if (!props.question) {\n    return <Box />\n  }\n\n  if (!question.options) {\n    console.error('expected question to have options')\n    return null\n  }\n\n  const options = question.options.map((option) => ({ name: translateCopy(option.name), id: option.id }))\n\n  return (\n    <StyledSelect\n      a11yTitle={translateCopy(question.name)}\n      margin={{ top: 'xsmall' }}\n      options={options}\n      labelKey=\"name\"\n      valueKey={{\n        key: 'id',\n        reduce: true,\n      }}\n      value={value as string}\n      onChange={({ option }: { option: { id: string; name: string } }) => setValue(question, option.id)}\n    />\n  )\n}\nexport default Select\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, RadioButtonGroup } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  onChange?: (id: string) => void\n}\n\nconst SingleSelectRadio: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n\n  const value = values[question.id]\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  const options = question.options.map((o) => {\n    const v = `${question.id}:${o.id}`\n    return {\n      id: v,\n      value: v,\n      name: v,\n      label: translateCopy(o.name),\n    }\n  })\n\n  return (\n    <Box className=\"radio-button-group\">\n      <RadioButtonGroup\n        name={translateCopy(question.name)}\n        options={options}\n        value={`${question.id}:${value}`}\n        onChange={(e) => {\n          const id = e.target.value.split(':')[1]\n          props.onChange ? props.onChange(id) : setValue(question, id)\n        }}\n      />\n    </Box>\n  )\n}\n\nexport default SingleSelectRadio\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport SingleSelect from './SingleSelect'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\nconst Boolean: React.FC<Props> = (props) => {\n  const { form, setValue } = useContext(FormContext)\n\n  const question = props.question\n  question.options = [\n    {\n      id: 'true',\n      name: form.instructions['yes'],\n    },\n    {\n      id: 'false',\n      name: form.instructions['no'],\n    },\n  ]\n\n  // Override the SingleSelect's onChange in order to cast the ID (string) to a boolean.\n  const onChange = (id: string) => {\n    setValue(question, id === 'true')\n  }\n\n  return <SingleSelect question={question} onChange={onChange} />\n}\n\nexport default Boolean\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, CheckBox, Paragraph } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  value: string[]\n  question: Question\n  onChange: (val: string[]) => void\n  [key: string]: any\n}\n\nconst Multiselect: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id] as string[] | string\n\n  const onSelectValue = (option: string) => {\n    if (!value) {\n      return setValue(question, [option])\n    }\n    if (!Array.isArray(value)) {\n      return setValue(question, [value, option])\n    }\n    if (value.includes(option)) {\n      return setValue(\n        question,\n        value.filter((val) => val !== option)\n      )\n    }\n\n    setValue(question, [...value, option])\n  }\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  return (\n    <Box>\n      {question.options.map((o) => {\n        const isSelected = Boolean(value && value.includes(o.id))\n        return (\n          <Box className={isSelected ? 'checkbox checkbox-selected' : 'checkbox'} key={o.id}>\n            <CheckBox\n              style={{\n                marginTop: '8px',\n              }}\n              checked={isSelected}\n              label={<Paragraph margin=\"none\">{translateCopy(o.name)}</Paragraph>}\n              onChange={() => onSelectValue(o.id)}\n            />\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Multiselect\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { TextArea as GrommetTextArea } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  [key: string]: any\n}\n\nconst TextArea: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const hasError = errors[question.id]\n\n  return (\n    <GrommetTextArea\n      value={values[question.id] as string}\n      onChange={(e) => setValue(question, e.target.value)}\n      style={{ border: hasError ? '#FF4040 1px solid' : 'black 1px solid' }}\n    />\n  )\n}\n\nexport default TextArea\n","import { Option } from './types'\n\nconst initialStates = [\n  { name: 'Alabama', id: 'al' },\n  { name: 'Alaska', id: 'ak' },\n  { name: 'American Samoa', id: 'as' },\n  { name: 'Arizona', id: 'az' },\n  { name: 'Arkansas', id: 'ar' },\n  { name: 'California', id: 'ca' },\n  { name: 'Colorado', id: 'co' },\n  { name: 'Connecticut', id: 'ct' },\n  { name: 'Delaware', id: 'de' },\n  { name: 'District Of Columbia', id: 'dc' },\n  { name: 'Federated States Of Micronesia', id: 'fm' },\n  { name: 'Florida', id: 'fl' },\n  { name: 'Georgia', id: 'ga' },\n  { name: 'Guam', id: 'gu' },\n  { name: 'Hawaii', id: 'hi' },\n  { name: 'Idaho', id: 'id' },\n  { name: 'Illinois', id: 'il' },\n  { name: 'Indiana', id: 'in' },\n  { name: 'Iowa', id: 'ia' },\n  { name: 'Kansas', id: 'ks' },\n  { name: 'Kentucky', id: 'ky' },\n  { name: 'Louisiana', id: 'la' },\n  { name: 'Maine', id: 'me' },\n  { name: 'Marshall Islands', id: 'mh' },\n  { name: 'Maryland', id: 'md' },\n  { name: 'Massachusetts', id: 'ma' },\n  { name: 'Michigan', id: 'mi' },\n  { name: 'Minnesota', id: 'mn' },\n  { name: 'Mississippi', id: 'ms' },\n  { name: 'Missouri', id: 'mo' },\n  { name: 'Montana', id: 'mt' },\n  { name: 'Nebraska', id: 'ne' },\n  { name: 'Nevada', id: 'nv' },\n  { name: 'New Hampshire', id: 'nh' },\n  { name: 'New Jersey', id: 'nj' },\n  { name: 'New Mexico', id: 'nm' },\n  { name: 'New York', id: 'ny' },\n  { name: 'North Carolina', id: 'nc' },\n  { name: 'North Dakota', id: 'nd' },\n  { name: 'Northern Mariana Islands', id: 'mp' },\n  { name: 'Ohio', id: 'oh' },\n  { name: 'Oklahoma', id: 'ok' },\n  { name: 'Oregon', id: 'or' },\n  { name: 'Palau', id: 'pw' },\n  { name: 'Pennsylvania', id: 'pa' },\n  { name: 'Puerto Rico', id: 'pr' },\n  { name: 'Rhode Island', id: 'ri' },\n  { name: 'South Carolina', id: 'sc' },\n  { name: 'South Dakota', id: 'sd' },\n  { name: 'Tennessee', id: 'tn' },\n  { name: 'Texas', id: 'tx' },\n  { name: 'Utah', id: 'ut' },\n  { name: 'Vermont', id: 'vt' },\n  { name: 'Virgin Islands', id: 'vi' },\n  { name: 'Virginia', id: 'va' },\n  { name: 'Washington', id: 'wa' },\n  { name: 'West Virginia', id: 'wv' },\n  { name: 'Wisconsin', id: 'wi' },\n  { name: 'Wyoming', id: 'wy' },\n]\n\nexport const states: Option[] = initialStates.map((state) => ({\n  name: {\n    en: state.name,\n    es: state.name,\n    zh: state.name,\n  },\n  id: state.id,\n}))\n","import React from 'react'\nimport { states } from '../../lib/states'\nimport Select from './Select'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst StateSelect: React.FC<Props> = (props) => {\n  const { question } = props\n  question.options = states\n  return <Select question={question} />\n}\n\nexport default StateSelect\n","import React, { useContext } from 'react'\nimport { TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\nimport NumberFormat, { NumberFormatProps } from 'react-number-format'\n\ninterface Props {\n  question: Question\n}\n\nexport const Number: React.FC<Props> = (props) => {\n  const { question } = props\n  const { setValue, errors } = useContext(FormContext)\n\n  const onChange: NumberFormatProps['onValueChange'] = ({ floatValue }) => {\n    setValue(question, floatValue)\n  }\n\n  let typeProps: Partial<NumberFormatProps> = {\n    type: 'tel',\n    allowNegative: false,\n  }\n  if (question.type === 'dollar-amount') {\n    typeProps = {\n      ...typeProps,\n      prefix: '$',\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'integer') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n    }\n  } else if (question.type === 'decimal') {\n    typeProps = {\n      ...typeProps,\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'phone') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '+1 (###) ###-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  } else if (question.type === 'ssn') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '###-##-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  }\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <NumberFormat\n      className={hasError ? 'text-input errored' : 'text-input'}\n      customInput={GrommetTextInput}\n      onValueChange={onChange}\n      style={{ maxWidth: '600px' }}\n      {...typeProps}\n    />\n  )\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\nimport './circle-icon.css'\n\nexport interface Props {\n  color: string\n}\n\nexport const CircleIcon: React.FC<Props & BoxProps & JSX.IntrinsicElements['div']> = (props) => {\n  const { color, ...otherProps } = props\n\n  return (\n    <Box\n      style={{ height: '20px', width: '20px', borderRadius: '12px' }}\n      background={{ color }}\n      flex={true}\n      justify=\"center\"\n      align=\"center\"\n      className=\"circle-icon\"\n      {...otherProps}\n    >\n      {props.children}\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, FileValues, FileValue } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { FormNextLink, Checkmark, FormClose } from 'grommet-icons'\nimport { useDropzone } from 'react-dropzone'\nimport { Box, Button, Paragraph, Image } from 'grommet'\nimport { encode } from 'base64-arraybuffer'\nimport './file.css'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\n/**\n * This File component is used to upload a single image or PDF file.\n * It supports drag-and-drop, file upload and image capture.\n *\n * It's built on top of:\n *  - React Dropzone: https://react-dropzone.js.org/\n *  - FileReader API: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n *\n * The contents of the uploaded file are stored as a base64-encoded binary string\n * inside of the corresponding form value. In the future, we may consider uploading to S3\n * and storing an S3 URL as a form value, but embeddeding the file inside of the\n * claim will make it easier to integrate with state backends and likely means we\n * can get something out the door sooner.\n */\nconst File: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateByID } = useContext(FormContext)\n  const value = values[question.id] as FileValues | undefined\n\n  const onDrop = async (acceptedFiles: File[]) => {\n    const files = await Promise.all(\n      acceptedFiles.map((file) => {\n        return new Promise<FileValue | undefined>((resolve) => {\n          const reader = new FileReader()\n\n          reader.onerror = () => {\n            resolve()\n          }\n          reader.onabort = () => {\n            resolve()\n          }\n          // onload fired only after the read operation has finished\n          reader.onload = () => {\n            resolve({\n              name: file.name,\n              type: file.type,\n              size: file.size,\n              contents: encode(reader.result as ArrayBuffer),\n            })\n          }\n          reader.readAsArrayBuffer(file)\n        })\n      })\n    )\n\n    setValue(question, [...(value || []), ...(files.filter((f) => !!f) as FileValue[])])\n  }\n\n  const { getRootProps, getInputProps, isDragActive, isFocused } = useDropzone({\n    minSize: 100, // arbitrary min > 0 (100B)\n    maxSize: 4194304, // 4MB\n    // This handler is fired both on valid and invalid files.\n    onDrop,\n    // Accept PNGs, JPGs and PDFs\n    accept: ['image/png', 'image/jpeg', 'image/jpg', 'application/pdf'],\n  })\n\n  const onRemove = () => {\n    setValue(question, undefined)\n  }\n\n  const color = isDragActive || isFocused ? '#4776F6' : '#CCCCCC'\n\n  return (\n    <>\n      <Box\n        pad=\"medium\"\n        gap=\"small\"\n        alignContent=\"center\"\n        align=\"center\"\n        style={{\n          outline: `2px dashed ${color}`,\n          cursor: 'pointer',\n        }}\n        background={{\n          color: '#F6F7F9',\n        }}\n        className=\"file-upload-box\"\n        margin={{ bottom: '12px' }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-drag-drop')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-or')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"#4776F6\" style={{ display: 'flex', fontWeight: 600 }}>\n          {translateByID('file-uploader-choose-file')}\n          <CircleIcon color=\"#4776F6\" margin={{ left: '6px' }}>\n            <FormNextLink color=\"white\" className=\"file-upload-icon\" />\n          </CircleIcon>\n        </Paragraph>\n      </Box>\n      {value &&\n        value.map((v, i) => (\n          <Box direction=\"row\" pad=\"medum\" height=\"75px\" key={i} align=\"center\" justify=\"between\">\n            <Box direction=\"row\">\n              {/* TODO: use other SVGs for PDF/JPEG/etc. when those are available */}\n              <Image src=\"/file.jpg.svg\" width=\"45px\" />\n              <Paragraph margin={{ left: '12px', bottom: '12px' }}>{v.name}</Paragraph>\n            </Box>\n            <Box direction=\"row\" align=\"center\">\n              <Paragraph margin={{ vertical: 'none', right: '12px' }}>\n                {translateByID('file-uploader-uploaded')}\n              </Paragraph>\n              <CircleIcon color=\"#4776F6\">\n                <Checkmark color=\"white\" style={{ width: '12px', height: '12px' }} />\n              </CircleIcon>\n              <Button\n                icon={<FormClose />}\n                onClick={onRemove}\n                size=\"small\"\n                margin={{ left: '20px' }}\n                style={{\n                  borderRadius: '20px',\n                  padding: '3px',\n                }}\n                primary={true}\n                color=\"#eee\"\n                hoverIndicator={{\n                  color: 'lightgrey',\n                }}\n              />\n            </Box>\n          </Box>\n        ))}\n    </>\n  )\n}\n\nexport default File\n","import { Question, QuestionType, Page, Values, Errors } from '../lib/types'\nimport DatePicker from '../components/form-components/DatePicker'\nimport TextInput from '../components/form-components/TextInput'\nimport Select from '../components/form-components/Select'\nimport SingleSelect from '../components/form-components/SingleSelect'\nimport Boolean from '../components/form-components/Boolean'\nimport Multiselect from '../components/form-components/Multiselect'\nimport TextArea from '../components/form-components/TextArea'\nimport StateSelect from '../components/form-components/StateSelect'\nimport { Number as NumberComponent } from '../components/form-components/Number'\nimport File from '../components/form-components/File'\nimport { Checkbox } from '../components/form-components/Checkbox'\nimport { Box } from 'grommet'\n\n/**\n * Determines if a user can proceed to the next form, if they have:\n * 1) Finished all required questions\n * 2) There are no validation errors\n * @param page\n * @param values\n * @param errors\n */\nexport function canContinue(page: Page, values: Values, errors: Errors): boolean {\n  if (!page) {\n    return true\n  }\n\n  const questions = getFlattenedQuestions(page.questions, values)\n  const questionIds = questions.map((q) => q.id)\n  const requiredQuestions = questions.filter((q) => q.required).map((q) => q.id)\n  return requiredQuestions.every((id) => values[id] !== undefined) && !questionIds.some((id) => errors[id])\n}\n\n/**\n * Given a set of questions, generates a flattened list of 'relevant' questions, including subquestions from switches.\n * @param questions\n * @param values\n */\nexport function getFlattenedQuestions(questions: Question[], values: Values): Question[] {\n  const flattenedQuestions: Question[] = []\n\n  for (const question of questions) {\n    flattenedQuestions.push(question)\n    const { id } = question\n\n    const value = values[id] as string\n    const hasSubQuestions = value !== undefined && question.switch && question.switch[value] !== undefined\n    if (hasSubQuestions) {\n      const subQuestions = question.switch![value]\n      flattenedQuestions.push(...getFlattenedQuestions(subQuestions, values))\n    }\n  }\n\n  return flattenedQuestions\n}\n\nconst typeComponentMappings: Partial<Record<QuestionType, React.FC>> = {\n  shorttext: TextInput as React.FC,\n  date: DatePicker as React.FC,\n  dropdown: Select as React.FC,\n  'single-select': SingleSelect as React.FC,\n  boolean: Boolean as React.FC,\n  multiselect: Multiselect as React.FC,\n  longtext: TextArea as React.FC,\n  'instructions-only': Box,\n  'state-picker': StateSelect as React.FC,\n  decimal: NumberComponent as React.FC,\n  integer: NumberComponent as React.FC,\n  'dollar-amount': NumberComponent as React.FC,\n  phone: NumberComponent as React.FC,\n  ssn: NumberComponent as React.FC,\n  file: File as React.FC,\n  checkbox: Checkbox as React.FC,\n}\n\nexport function getComponent(type: QuestionType): React.FC<{ question: Question }> {\n  return typeComponentMappings[type] || TextInput\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { CheckBox as GrommetCheckBox, Paragraph, Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n}\n\nexport const Checkbox: React.FC<Props> = (props) => {\n  const { question, ...rest } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n\n  const value = values[question.id]\n\n  return (\n    <Box className={value === true ? 'checkbox checkbox-selected' : 'checkbox'}>\n      <GrommetCheckBox\n        checked={value === true}\n        label={<Paragraph>{translateCopy(question.options![0].name)}</Paragraph>}\n        onChange={() => setValue(question, !value)}\n        {...rest}\n      />\n    </Box>\n  )\n}\n","import { Question, Copy, Form, Values, Value } from './types'\nimport validator from 'email-validator'\nimport Joi from '@hapi/joi'\nimport moment from 'moment'\nimport { states } from './states'\n\nfunction getInstructions(form: Form, id: string): Copy {\n  const c = form.instructions[id]\n  if (!c) {\n    throw new Error(`Unknown instructions id: ${id}`)\n  }\n  return c\n}\n\nexport function isQuestionValid(\n  question: Question,\n  value: Value,\n  values: Values,\n  form: Form\n): { errors: Copy[]; dependencies: string[] } {\n  const errors: Copy[] = []\n\n  // Handle required-field checks.\n  if (value === undefined) {\n    if (question.required) {\n      errors.push(getInstructions(form, 'field-is-required'))\n    } else {\n      // If the question is not required and not set,\n      // go ahead and exit early so we don't surface unnecessary errors.\n      return { errors: [], dependencies: [] }\n    }\n  }\n\n  function validate<T>(schema: Joi.Schema, value: any, copyID: string): value is T {\n    const { error } = schema.strict().validate(value)\n    if (error) {\n      errors.push(getInstructions(form, copyID!))\n      if (process.env.NODE_ENV === 'development') {\n        console.error(error)\n      }\n    }\n    return !error\n  }\n\n  // Handle type-specified validation, which is generic\n  // to the question itself.\n  switch (question.type) {\n    case 'email':\n      if (validate<string>(Joi.string(), value, 'invalid-email')) {\n        if (!validator.validate(value)) {\n          errors.push(getInstructions(form, 'invalid-email'))\n        }\n      }\n      break\n    case 'decimal':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-decimal')\n      break\n    case 'integer':\n      validate(Joi.number().precision(0).min(0).max(2147483647), value, 'invalid-integer')\n      break\n    case 'dollar-amount':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-dollar')\n      break\n    case 'shorttext':\n    case 'longtext':\n      validate(\n        Joi.string()\n          .allow(...(question.required ? [] : ['']))\n          .max(question.type === 'shorttext' ? 200 : 10000),\n        value,\n        'invalid-text'\n      )\n      break\n    case 'date':\n      // We should be able to replicate this with joi-date, but I didn't have much\n      // luck with that. Kept hitting undocumented issues with the format function.\n      validate(\n        Joi.string().custom((v: string, helpers) => {\n          const strict = true\n          return moment(v, 'YYYY-MM-DDTHH:mm:ssZ', strict).isValid() ? v : helpers.error('any.invalid')\n        }),\n        value,\n        'invalid-date'\n      )\n      break\n    case 'dropdown':\n    case 'single-select':\n    case 'state-picker':\n      if (validate<string>(Joi.string(), value, 'invalid-select')) {\n        const options = question.type === 'state-picker' ? states : question.options\n        // Check if we selected a pre-defined option id:\n        if (!options?.find((o) => o.id === value)) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'multiselect':\n      if (validate<string[]>(Joi.array().items(Joi.string()), value, 'invalid-select')) {\n        const invalid = value.some((v) => {\n          return !question.options?.find((o) => o.id === v)\n        })\n        if (invalid) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'boolean':\n      validate(Joi.boolean(), value, 'invalid-boolean')\n      break\n    case 'phone':\n      validate(Joi.number().precision(0).min(1000000000).max(9999999999), value, 'invalid-phone')\n      break\n    case 'ssn':\n      validate(Joi.number().precision(0).min(100000000).max(999999999), value, 'invalid-ssn')\n      break\n    case 'arn':\n      validate(Joi.string().regex(/^A[0-9]{7,9}$/), value, 'invalid-arn')\n      break\n    case 'address':\n      // TODO: we should do more validation than this for address, but this depends on the new\n      // UI for entering addresses.\n      validate(Joi.string(), value, 'invalid-address')\n      break\n    case 'instructions-only':\n      // There should not be an answer for this question.\n      errors.push(getInstructions(form, 'invalid-instructions-only'))\n      break\n    case 'file':\n      validate(\n        Joi.array()\n          .min(question.required ? 1 : 0)\n          .max(10)\n          .items(\n            Joi.object({\n              name: Joi.string().optional(),\n              type: Joi.string().valid('image/png', 'image/jpeg', 'image/jpg', 'application/pdf'),\n              size: Joi.number().min(0),\n              contents: Joi.string().min(1),\n            })\n          ),\n        value,\n        'invalid-file'\n      )\n      break\n    case 'checkbox':\n      if (value !== true) {\n        errors.push(getInstructions(form, 'invalid-checkbox'))\n      }\n  }\n\n  // Handle question-specific validation, as specified in the form.\n  const dependencies: string[] = []\n  question.validate?.forEach((validation) => {\n    const { type, value: validationValue, error } = validation\n\n    if (typeof validationValue === 'string' && validationValue.startsWith('id:')) {\n      // If this validation depends on another question, then we'll need to\n      // reevaluate the error state of that field. We track that with dependencies\n      // and the caller of this function is responsible for handling that.\n      dependencies.push(validationValue.slice(3))\n    }\n\n    let isValid\n    if (type === 'regex') {\n      const regex = new RegExp(validationValue as string)\n      isValid = typeof value === 'string' && regex.test(value)\n    } else if (type === 'matches_field') {\n      const id = validationValue.slice(3)\n      isValid = value === values[id]\n    } else if (type === 'min' || type === 'max') {\n      if (question.type === 'date') {\n        const d = moment(value as string, moment.ISO_8601)\n        if (validationValue.startsWith('id:')) {\n          // Compare this date to the corresponding date based on the supplied id.\n          const id = validationValue.slice(3)\n          const other = values[id]\n          if (other === undefined) {\n            // If we haven't specified the other date yet, don't consider that an error.\n            isValid = true\n          } else {\n            const od = moment(other as string, moment.ISO_8601)\n            isValid = type === 'min' ? d.isSameOrAfter(od) : d.isSameOrBefore(od)\n          }\n        } else {\n          // Compare this date to the relative date specified (f.e. \"-14y\").\n          const unit = validationValue[validationValue.length - 1] as 'y' | 'd'\n          const n = Number(validationValue.slice(0, validationValue.length - 1))\n          const p = moment().add(n, unit)\n          isValid = type === 'min' ? d >= p : d <= p\n        }\n      }\n    }\n\n    if (!isValid) {\n      errors.push(error)\n    }\n  })\n\n  return { errors, dependencies }\n}\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport formSchema from '../form.schema.json'\nimport { Question, Copy, Form, Value, Values, Errors } from '../lib/types'\nimport { canContinue } from '../forms'\nimport { Box } from 'grommet'\nimport { omit } from 'lodash'\nimport { Spinner, Markdown, Card } from '../components/helper-components'\nimport { LanguageContext } from './language'\nimport ky from 'ky'\nimport yaml from 'js-yaml'\nimport Ajv from 'ajv'\nimport { getFlattenedQuestions } from '../forms/index'\nimport { isQuestionValid } from '../lib/validation'\n\ninterface FormState {\n  form: Form\n  setValue: (question: Question, value: Value) => void\n  setError: (id: string, value: Copy[]) => void\n  values: Values\n  errors: Errors\n  translateCopy: (copy: Copy, variables?: Record<string, string>) => string\n  translateByID: (id: string, variables?: Record<string, string>) => string\n  completion: Record<string, boolean>\n  pageIndex: number\n  setPage: (index: number) => void\n}\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  form: undefined,\n  values: {},\n  errors: {},\n  setValue: (question: Question, value: Value) => {},\n  setError: (id: string, value: Copy[]) => {},\n}\n\nexport const FormContext = createContext<FormState>(initialState as any)\n\ntype FormError = {\n  message: string\n  error?: any\n}\n\nexport const FormProvider: React.FC = (props) => {\n  const [form, setForm] = useState<Form | undefined>(initialState.form)\n  const [values, setValues] = useState<Values>(initialState.values)\n  const [errors, setErrors] = useState<Errors>(initialState.errors)\n  const [completion, setCompletion] = useState<Record<string, boolean>>({})\n  const [pageIndex, setPageIndex] = useState<number>(0)\n  const [formValidationError, setFormValidationError] = useState<FormError | undefined>()\n  const { language } = useContext(LanguageContext)\n\n  useEffect(() => {\n    const effect = async () => {\n      // Load the form.yaml\n      //\n      // TODO: experiment with nextjs to see if we can embed this file instead\n      // of fetching it. This'll speed up page load. Next would allow us to\n      // get the benefits of ejecting CRA without ejecting.\n      const [form, formSample] = await Promise.all([ky.get('form.yml').text(), ky.get('form.sample.yml').text()])\n\n      let contents, sampleContents\n      try {\n        // Parse the YAML -> JSON\n        contents = yaml.safeLoad(form, {\n          json: true,\n        })\n        sampleContents = yaml.safeLoad(formSample, {\n          json: true,\n        })\n      } catch (err) {\n        setFormValidationError({\n          message: 'Failed to parse YAML form',\n          error: err,\n        })\n        return\n      }\n\n      // States will build their own form in `form.yml` from the example in `form.sample.yml`.\n      // By default, we'll use the sample version until a state starts building their form in\n      // `form.yml`.\n      const useSample = contents === null\n      const rawForm = useSample ? sampleContents : contents\n\n      // During local development, we validate the form structure against\n      // our JSON Schema and render any errors.\n      if (process.env.NODE_ENV === 'development') {\n        const ajv = new Ajv({\n          allErrors: true,\n        })\n        const validator = ajv.compile(formSchema)\n        validator(rawForm)\n        if (validator.errors) {\n          console.error(validator.errors)\n          const errors = validator.errors.filter(({ dataPath, message }) => {\n            // Filter out error messages about the default (empty) form.yml schema.\n            return !(\n              dataPath === '' &&\n              message &&\n              ['should be string,null', 'should match exactly one schema in oneOf'].includes(message)\n            )\n          })\n          setFormValidationError({\n            message: `${useSample ? 'form.sample.yml' : 'form.yml'} failed validation\\n${errors.map(\n              (d) => `\\n  - ${d.dataPath} ${d.message}`\n            )}`,\n          })\n        }\n      }\n\n      setForm(rawForm)\n    }\n\n    effect().catch((err) => {\n      console.error(err)\n    })\n  }, [])\n\n  const setError = (key: string, value: Copy[]) => setErrors({ ...errors, [key]: value })\n  const setValue = (question: Question, value: Value) => {\n    const newValues = value !== undefined ? { ...values, [question.id]: value } : omit(values, question.id)\n    setValues(newValues)\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Form values: ', newValues)\n    }\n\n    const { errors: validationErrors, dependencies } = isQuestionValid(question, value, values, form!)\n    let newErrors =\n      validationErrors.length > 0 ? { ...errors, [question.id]: validationErrors } : omit(errors, question.id)\n    // Note: we only support question references within the same page. That's probably good enough,\n    // but we could expand this in the future if needed.\n    const page = form!.pages[pageIndex]\n    for (const dep of dependencies) {\n      if (values[dep] !== undefined) {\n        const q = getFlattenedQuestions(page.questions, values).find((q) => q.id === dep)!\n        // Note: we ignore deps here. We could recursively traverse them if we want, but we'll need\n        // to avoid cycles. So we just handle a single level of depth (which should be good enough) for now.\n        const { errors: depErrors } = isQuestionValid(q, values[dep], newValues, form!)\n        newErrors = depErrors.length > 0 ? { ...newErrors, [q.id]: depErrors } : omit(newErrors, q.id)\n      }\n    }\n    setErrors(newErrors)\n\n    const canContinueFromPage = canContinue(page, newValues, newErrors)\n    setCompletion({\n      ...completion,\n      [pageIndex]: canContinueFromPage,\n    })\n  }\n\n  const translateCopy = useCallback(\n    (copy: Copy, variables?: Record<string, string>) => {\n      let text = copy[language]\n\n      // Apply templating variables by looking for `{{VARIABLE_NAME}}` fields.\n      // The value is evaluated as the first truthy value of:\n      //  1. If the key starts with `id:`, then the remainder of the key is considered a question ID\n      //     and the corresponding value from the current set of form values is used.\n      //  2. If a matching key is supplied in the `variables` argument to `translateCopy`.\n      //  3. If a matching key exists in the form's top-level variables map.\n      //  4. If nothing else, then the variable is left as-is (f.e.: {{VARIABLE_NAME}}).\n      text = text.replace(/\\{\\{([a-ziA-Z_:-]+)\\}\\}/g, (m, key) => {\n        // `key` is the regex-captured value inside the curly braces:\n        let value = variables?.[key] || form?.variables?.[key]\n        if (key.startsWith('id:')) {\n          const questionID = key.slice(3)\n          value = values[questionID] ? String(values[questionID]) : value\n        }\n        // If we don't recognize this variable, then default to rendering\n        // all of `{{VARIABLE_NAME}}` since that'll make the issue clearest.\n        return value ? value : m\n      })\n\n      return text\n    },\n    [form, language, values]\n  )\n\n  const translateByID = (id: string, variables?: Record<string, string>): string => {\n    return translateCopy(form!.instructions[id], variables)\n  }\n\n  const setPage = (index: number) => {\n    setPageIndex(index)\n    window.scrollTo(0, 0)\n  }\n\n  /**\n   * This hook is purely for testing, where it'll prefill form values so we can test\n   * functionality later on in the form.\n   */\n  // const [prefilled, setPrefilled] = useState(false)\n  // useEffect(() => {\n  //   if (prefilled || !form || process.env.NODE_ENV !== 'development') return\n\n  //   // Initialize form with some starter values for testing.\n  //   // Note Number values won't render, but the value is there.\n  //   const testValues: Record<string, Value> = {\n  //     /* eslint-disable @typescript-eslint/camelcase */\n  //     agreement: true,\n  //     first_name: 'Colin',\n  //     last_name: 'King',\n  //     dob: '2001-01-02T00:00:00+00:00',\n  //     gender: 'male',\n  //     race: 'white',\n  //     ethnicity: 'hispanic',\n  //     home_address: '123 Home St.',\n  //     telephone: 1234567890,\n  //     preferred_language: 'en',\n  //     mailing_home_address_same: true,\n  //     ssn: 123456789,\n  //     ssn_confirm: 123456789,\n  //     has_dl_or_state_id: false,\n  //     is_us_citizen: true,\n  //     'military-veteran': true,\n  //     'active-duty-start': '2020-05-06T00:00:00+00:00',\n  //     'active-duty-end': '2020-05-22T00:00:00+00:00',\n  //     'military-disability': 'disability-more-than-30',\n  //     'military-active-last-two-years': true,\n  //     'military-last-pay-grade': '12345',\n  //     'military-accured-paid-leave': 12345,\n  //     'military-reason-for-separation': '123',\n  //     'military-branch': 'army',\n  //     'military-work-end': '2020-04-29T00:00:00+00:00',\n  //     'military-character-of-service': 'Test',\n  //     'military-net-service': '123',\n  //     'last-week-paid': 12345,\n  //     'employment-current-status': true,\n  //     'last-week-hours': 1234,\n  //     'employment-able-to-work': true,\n  //     'employment-option-to-telework': true,\n  //     'employment-available-to-work': true,\n  //     'employment-last-12-months': true,\n  //     'employment-employers-in-last-18-months': '5-or-more',\n  //     'employment-federal-employee': true,\n  //     'employment-federal-employee-last-date': '2020-05-27T00:00:00+00:00',\n  //     'employment-in-trade-union': true,\n  //     'employment-trade-union': '1033',\n  //     'employer-name': 'Another One',\n  //     'employer-address': '123456 Test',\n  //     'employer-phone-number': 1234567890,\n  //     'employer-id-number': 1234567890,\n  //     'employer-job-title': 'Testing Engineer',\n  //     'employer-first-day-of-work': '2020-05-19T00:00:00+00:00',\n  //     'employer-last-day-of-work': '2020-04-29T00:00:00+00:00',\n  //     'employer-type': 'fulltime',\n  //     'employer-pay-rate': 12345678,\n  //     'employer-pay-unit': 'per-hour',\n  //     'employer-reason-for-separation': true,\n  //     'covid-19-reason': 'household_diagnosed',\n  //     'employer-current-benefits': true,\n  //     'employer-current-teleworking': true,\n  //     'tax-info-have-tax-return': true,\n  //     'tax-info-married': 'married-jointly',\n  //     'tax-info-agi': 12345678,\n  //     'tax-info-dependents': '2',\n  //     'unemployment-in-another-state': true,\n  //     'unemployment-in-another-state-state': 'ak',\n  //     'unemployment-in-another-state-date': '2020-05-20T00:00:00+00:00',\n  //     'unemployment-in-another-state-employment-since': true,\n  //     'other-income-public-assistance': true,\n  //     'other-income-dhs-work': false,\n  //     'other-income-snap': false,\n  //     'other-income-temp-disability-insurance': false,\n  //     'other-income-workers-comp': false,\n  //     'other-income-disability-payments': false,\n  //     'other-income-retirement-pension': true,\n  //     'other-income-retirement annuity': true,\n  //     'other-income-social-security': false,\n  //     'payment-income-withheld': 'state-and-fed',\n  //     'payment-option': 'direct-deposit',\n  //     'payment-bank-name': 'Yees',\n  //     'payment-account-type': 'savings',\n  //     'payment-account-number': 1234567890,\n  //     'payment-account-number-confirm': 1234567890,\n  //     'payment-routing-number': 23456789,\n  //     'payment-routing-number-confirm': 23456789,\n  //   }\n  //   for (const [id, v] of Object.entries(testValues)) {\n  //     if (values[id] === v) {\n  //       continue\n  //     }\n\n  //     for (const [i, page] of form.pages.entries()) {\n  //       for (const question of getFlattenedQuestions(page.questions, values)) {\n  //         if (question.id === id) {\n  //           if (i !== pageIndex) {\n  //             setPageIndex(i)\n  //             // 1337 hacks\n  //             return\n  //           }\n\n  //           setValue(question, v)\n  //           // 1337 hacks\n  //           return\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   // now that we've prefilled the values, stop overwriting them with the initial values.\n  //   setPrefilled(true)\n  // })\n\n  useEffect(() => {\n    if (form) {\n      // Update the page title\n      document.title = translateCopy(form.title)\n\n      // Upsert the page description\n      let description = document.querySelector('meta[name=\"description\"]')\n      if (!description) {\n        description = document.createElement('meta')\n        description.setAttribute('name', 'description')\n        document.head.appendChild(description)\n      }\n      description.setAttribute('content', translateCopy(form.description))\n    }\n  }, [form, translateCopy])\n\n  if (formValidationError) {\n    const content = `\n## ⚠️ Form Parsing Error\n\n${formValidationError.message}\n\n${formValidationError.error ? '```' + JSON.stringify(formValidationError.error, null, 2) + '```' : ''}`\n\n    return (\n      <Card\n        margin={{ vertical: 'medium', horizontal: 'auto' }}\n        pad={{ horizontal: 'medium', vertical: 'small' }}\n        width={{ max: '800px' }}\n      >\n        <Box pad=\"medium\">\n          <Markdown>{content}</Markdown>\n        </Box>\n      </Card>\n    )\n  }\n\n  if (!form) {\n    return (\n      <Box pad=\"medium\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  const value: FormState = {\n    form,\n    values,\n    setValue,\n    errors,\n    setError,\n    translateCopy,\n    translateByID,\n    completion,\n    pageIndex,\n    setPage,\n  }\n\n  return <FormContext.Provider value={value}>{props.children}</FormContext.Provider>\n}\n","import React, { useContext } from 'react'\nimport { Card } from './helper-components'\nimport { Box, Text, Image, ResponsiveContext, Heading, Paragraph } from 'grommet'\nimport { LanguageContext } from '../contexts/language'\nimport { FormContext } from '../contexts/form'\nimport { range } from 'lodash'\nimport { Markdown } from './helper-components/Markdown'\nimport { StyledSelect } from './helper-components/StyledSelect'\n\ninterface Props {\n  pages: string[]\n}\n\nconst languages = [\n  { title: 'English', value: 'en' },\n  { title: '中文', value: 'zh' },\n  { title: 'Español', value: 'es' },\n]\n\nconst Sidebar: React.FC<Props> = (props) => {\n  const { pages } = props\n  const { translateByID, form, pageIndex, setPage, completion } = useContext(FormContext)\n  const { language, setLanguage } = useContext(LanguageContext)\n  const size = useContext(ResponsiveContext)\n\n  const currentPage = pages[pageIndex]\n  const percent = Math.floor((pageIndex / (pages.length - 1)) * 100)\n\n  const canClickPage = (i: number) => {\n    return range(0, i).every((index) => completion[index])\n  }\n\n  return (\n    <Box\n      flex={{ shrink: 0 }}\n      margin={size === 'small' ? { top: 'small' } : { left: 'small' }}\n      direction=\"column\"\n      width={size === 'small' ? '100%' : '350px'}\n    >\n      <Card margin={{ bottom: 'small' }} pad={{ horizontal: size === 'small' ? '24px' : 'medium', vertical: 'small' }}>\n        <Markdown>{translateByID('demo-warning')}</Markdown>\n      </Card>\n      <Card pad=\"medium\">\n        {form.seal && (\n          <Box margin={{ bottom: 'medium' }}>\n            <Image src={form.seal} style={{ maxHeight: '175px', maxWidth: '100%', objectFit: 'contain' }} />\n          </Box>\n        )}\n        <Box>\n          <Heading level={4} margin=\"none\">\n            {translateByID('language')}\n          </Heading>\n          <StyledSelect\n            a11yTitle=\"select language\"\n            margin={{ top: 'xsmall' }}\n            options={languages}\n            labelKey=\"title\"\n            valueKey={{ key: 'value', reduce: true }}\n            value={language}\n            onChange={({ value }) => setLanguage(value)}\n          />\n        </Box>\n        <Box margin={{ top: 'medium' }}>\n          <Box direction=\"row\" justify=\"between\">\n            <Heading level={4} margin=\"none\">\n              {translateByID('progress')}\n            </Heading>\n            <Paragraph margin=\"none\">{percent}%</Paragraph>\n          </Box>\n          <Box\n            margin={{ top: 'xsmall' }}\n            style={{ width: '100%', height: '12px', borderRadius: '12px', background: '#F2F2F2' }}\n          >\n            <Box style={{ width: `${percent}%`, height: '100%', borderRadius: '12px', background: '#3A80C2' }} />\n          </Box>\n        </Box>\n        <Box margin={{ top: 'medium' }}>\n          {size === 'small' && pages.length > 2 ? (\n            <>\n              {/* On small screens, we collapse the section titles to a Select */}\n              <Heading level={4} margin=\"none\">\n                {translateByID('section')}\n              </Heading>\n              <StyledSelect\n                a11yTitle=\"select section\"\n                margin={{ top: 'xsmall' }}\n                options={pages.map((page, i) => ({ page, i, disabled: !canClickPage(i) }))}\n                labelKey=\"page\"\n                valueKey={{ key: 'i', reduce: true }}\n                disabledKey=\"disabled\"\n                value={pageIndex as any} /* These type definitions don't support values as numbers */\n                // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                onChange={({ value: i }) => setPage(i)}\n              />\n            </>\n          ) : (\n            /* On larger screens, we show all section titles as a list */\n            pages.map((page, i) => {\n              return (\n                <Text\n                  style={{\n                    cursor: canClickPage(i) ? 'pointer' : 'not-allowed',\n                    opacity: currentPage === page ? '100%' : canClickPage(i) ? '50%' : '20%',\n                  }}\n                  // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                  onClick={() => setPage(i)}\n                  margin={{ bottom: 'xsmall' }}\n                  key={page}\n                >\n                  {page}\n                </Text>\n              )\n            })\n          )}\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nexport default Sidebar\n","import React, { useContext, useState, Fragment } from 'react'\nimport { Page, Values } from '../lib/types'\nimport { FormContext } from '../contexts/form'\nimport { Box, Heading, Text, CheckBox } from 'grommet'\nimport moment from 'moment'\n\ninterface Props {\n  pages: Page[]\n  values: Values\n  setPage: (index: number) => void\n}\n\nconst Caret: React.FC<{ open: boolean }> = (props) => {\n  return (\n    <svg\n      transform={props.open ? 'rotate(90)' : undefined}\n      width=\"9\"\n      height=\"14\"\n      viewBox=\"0 0 9 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M1 1L7 7L1 13\" stroke=\"#333333\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nconst Edit = (\n  <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M11.0149 0.51C11.3349 0.2 11.7749 0 12.2549 0C13.2249 0 14.0049 0.79 13.9949 1.74C13.9949 2.23 13.8049 2.66 13.4849 2.98L12.0449 4.42L9.57488 1.95L11.0149 0.51ZM2.26488 9.27L4.73488 11.74L11.4249 5.05L8.96488 2.57L2.26488 9.27ZM0.00488281 14L3.86488 12.61L1.40488 10.17L0.00488281 14Z\"\n      fill=\"#3E73FF\"\n    />\n  </svg>\n)\n\nconst Summary: React.FC<Props> = (props) => {\n  const { pages, values, setPage } = props\n  const { translateCopy } = useContext(FormContext)\n\n  const [checkedPages, setCheckedPages] = useState<Record<string, boolean>>({})\n  const [openPages, setOpenPages] = useState<Record<string, boolean>>({})\n\n  const toggleCheck = (pageIndex: number) => setCheckedPages({ ...checkedPages, [pageIndex]: !checkedPages[pageIndex] })\n\n  const toggleOpenPage = (pageIndex: number) => {\n    setOpenPages({\n      ...openPages,\n      [pageIndex]: !openPages[pageIndex],\n    })\n  }\n\n  return (\n    <Box margin={{ top: 'medium' }} border={{ color: 'black' }}>\n      {pages.map((page, i) => {\n        const checked = checkedPages[i] || false\n        return (\n          <Fragment key={page.title.en}>\n            <Box\n              background=\"#F8F8F8\"\n              style={{\n                borderBottom: '1px solid black',\n              }}\n              onClick={() => toggleOpenPage(i)}\n              direction=\"row\"\n              justify=\"between\"\n              align=\"center\"\n              key={translateCopy(page.title)}\n              pad={{ horizontal: 'medium', vertical: 'small' }}\n            >\n              <Box direction=\"row\">\n                <Box\n                  margin={{ right: '16px' }}\n                  justify=\"center\"\n                  align=\"center\"\n                  height=\"25px\"\n                  width=\"25px\"\n                  background={checked ? '#3E73FF' : '#F8F8F8'}\n                  style={{ border: checked ? '1px solid #3E73F' : '1px solid #CCCCCC', borderRadius: '50%' }}\n                >\n                  {checked && (\n                    <Text color=\"white\" weight=\"bold\">\n                      ✓\n                    </Text>\n                  )}\n                </Box>\n                <Heading margin=\"none\" level={5}>\n                  {translateCopy(page.title)}\n                </Heading>\n              </Box>\n              <Caret open={openPages[i]} />\n            </Box>\n            {openPages[i] && (\n              <Box pad={{ horizontal: '48px', vertical: '24px' }} style={{ borderBottom: '1px solid black' }}>\n                {page.questions.map((q) => {\n                  const value = q.type === 'date' ? moment(values[q.id] as Date).format('M/DD/YYYY') : values[q.id]\n                  return (\n                    <Box key={q.id} direction=\"row\" margin={{ bottom: '16px' }}>\n                      <Text size=\"16px\" margin={{ right: '8px' }} weight={600}>\n                        {translateCopy(q.name)}:\n                      </Text>\n                      <Text size=\"16px\">{value}</Text>\n                    </Box>\n                  )\n                })}\n                <Box\n                  pad={{ top: 'small' }}\n                  margin={{ top: 'small ' }}\n                  direction=\"row\"\n                  justify=\"between\"\n                  style={{ borderTop: '1px solid black' }}\n                >\n                  <Box>\n                    <CheckBox checked={checked} onClick={() => toggleCheck(i)} label=\"The above info is correct.\" />\n                  </Box>\n                  <Text\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => setPage(i + 1)}\n                    size=\"16px\"\n                    color=\"#3E73FF\"\n                    a11yTitle={`Edit ${page.title}`}\n                  >\n                    Edit {Edit}\n                  </Text>\n                </Box>\n              </Box>\n            )}\n          </Fragment>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Summary\n","import React, { useContext } from 'react'\nimport { Box, Heading, ResponsiveContext } from 'grommet'\nimport { FormContext } from '../contexts/form'\nimport Summary from './Summary'\nimport { Markdown } from './helper-components/Markdown'\nimport { Page } from '../lib/types'\n\ninterface Props {\n  pages: Page[]\n}\n\nconst Review: React.FC<Props> = (props) => {\n  const { pages } = props\n  const { values, translateByID, setPage } = useContext(FormContext)\n  const size = useContext(ResponsiveContext)\n\n  const padding = size === 'small' ? '12px' : '24px'\n  return (\n    <Box pad={{ horizontal: padding, top: padding, bottom: 'none' }} direction=\"column\" justify=\"start\">\n      <Heading margin=\"none\" level={3}>\n        {translateByID('submit')}\n      </Heading>\n\n      <Markdown size=\"small\">{translateByID('submit-instructions')}</Markdown>\n\n      <Summary setPage={setPage} values={values} pages={pages} />\n    </Box>\n  )\n}\n\nexport default Review\n","// `aws-exports.json` is auto-generated by the amplify CLI\n// and it contains metadata such as the endpoint to query.\n// We override it for local development to point at\n// localhost:3050 where we run a copy of the API.\nconst awsmobile = {\n  aws_project_region: 'us-west-2',\n  aws_cloud_logic_custom: [\n    {\n      name: 'resolverAPI',\n      // Run `yarn backend` to boot up the API server on this port.\n      endpoint: 'http://localhost:3050',\n      region: 'us-west-2',\n    },\n  ],\n}\n\nexport default awsmobile\n","import React, { useContext } from 'react'\nimport { FormContext } from '../contexts/form'\nimport { Heading, Box, Paragraph } from 'grommet'\nimport { Markdown } from './helper-components/Markdown'\nimport Button from './helper-components/Button'\nimport { Clipboard } from 'grommet-icons'\nimport copy from 'copy-to-clipboard'\n\nexport interface Props {\n  id: string\n}\n\nexport const Confirmation: React.FC<Props> = (props) => {\n  const { translateByID, form } = useContext(FormContext)\n\n  const onCopy = () => {\n    copy(props.id)\n  }\n\n  const onExit = () => {\n    const domain = form.variables?.['DOMAIN']\n    if (domain) {\n      window.location.href = `https://${domain}`\n    }\n  }\n\n  return (\n    <Box direction=\"column\" justify=\"start\">\n      {/* Instructions */}\n      <Box pad={{ horizontal: '48px', top: '48px', bottom: 'none' }}>\n        <Heading margin=\"none\" level={3}>\n          {translateByID('confirmation-heading')}\n        </Heading>\n        <Markdown>\n          {translateByID('confirmation-instructions', {\n            // NOTE: this is a hack for demos -- if we forgot to fill out the first and last name\n            // and then skip ahead to the confirmation (past all of the validation that would\n            // ensure you've provided a name), then we would render something ugly like\n            // Hello, {{id:first_name}} {{id_last_name}}!\n            //\n            // YUCK! Let's instead fallback on a hardcoded name just in case we forgot\n            // (it's a demo after all!).\n            'id:first_name': 'John',\n            'id:last_name': 'Doe',\n          })}\n        </Markdown>\n      </Box>\n      {/* Confirmation number + copy button */}\n      <Box\n        background={{ color: '#F6F7F9' }}\n        direction=\"row\"\n        pad={{ horizontal: '48px', vertical: '16px' }}\n        justify=\"between\"\n      >\n        <Box direction=\"column\">\n          <Paragraph size=\"small\" margin={{ top: 'none', bottom: 'small' }}>\n            {translateByID('confirmation-number')}\n          </Paragraph>\n          <Paragraph size=\"large\" margin=\"none\">\n            {props.id}\n          </Paragraph>\n        </Box>\n        <Box height=\"100%\" justify=\"center\" pad={{ top: '16px' }}>\n          <Button\n            onClick={onCopy}\n            label={translateByID('copy')}\n            reverse={true}\n            gap=\"small\"\n            icon={\n              <Box width=\"20px\">\n                <Clipboard size=\"small\" />\n              </Box>\n            }\n          />\n        </Box>\n      </Box>\n      {/* Warning */}\n      <Box style={{ position: 'relative' }} margin={{ vertical: '16px' }} direction=\"row\">\n        <Box\n          style={{\n            position: 'absolute',\n            height: '100%',\n            width: '8px',\n            backgroundColor: '#FFAE00',\n          }}\n        />\n        <Box pad={{ vertical: 'none', horizontal: '48px' }}>\n          <Markdown>{translateByID('confirmation-warning')}</Markdown>\n        </Box>\n      </Box>\n      {/* Exit button */}\n      <Box direction=\"row\" justify=\"between\" margin={{ horizontal: '48px', vertical: '16px' }}>\n        <Box />\n        <Box>\n          <Button primary={true} onClick={onExit} label={translateByID('confirmation-exit')} size=\"small\" />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question as QuestionInterface } from '../lib/types'\nimport { getComponent } from '../forms'\nimport { Box, Heading, Text } from 'grommet'\nimport { FormContext } from '../contexts/form'\nimport { Markdown } from './helper-components'\n\ninterface Props {\n  question: QuestionInterface\n}\n\nconst Question: React.FC<Props> = (props) => {\n  const { question } = props\n  const Component = getComponent(question.type)\n\n  const { values, errors, translateCopy, translateByID } = useContext(FormContext)\n\n  const value = values[question.id]\n  const error = errors[question.id]\n\n  return (\n    <Box direction=\"column\" margin={{ bottom: 'small' }}>\n      <Box fill={true} margin={{ bottom: 'small' }}>\n        <Box direction=\"row\" align=\"start\">\n          <Heading\n            style={{\n              maxWidth: 'none',\n            }}\n            level={4}\n            margin=\"none\"\n          >\n            {translateCopy(question.name)}\n            {!question.required && !['instructions-only'].includes(question.type) && (\n              <em> ({translateByID('optional')})</em>\n            )}\n          </Heading>\n        </Box>\n        {question.instructions && <Markdown size=\"small\">{translateCopy(question.instructions)}</Markdown>}\n      </Box>\n      <Component question={question} />\n      {error && (\n        <Box>\n          {error.map((e) => (\n            <Text key={e.en} margin={{ top: 'xsmall' }} color=\"#FF4040\">\n              {translateCopy(e)}\n            </Text>\n          ))}\n        </Box>\n      )}\n      <Box margin={{ top: 'medium' }}>\n        {question.switch && question.switch[value as string]?.map((q) => <Question question={q} key={q.id} />)}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Question\n","import React, { useState, useContext } from 'react'\nimport { Card, Button, Markdown } from './helper-components'\nimport { Box, ResponsiveContext, Heading } from 'grommet'\nimport Sidebar from './Sidebar'\nimport Review from './Review'\nimport { FormContext } from '../contexts/form'\nimport Amplify, { API } from 'aws-amplify'\nimport awsconfig from '../aws-exports'\nimport { v5 as uuid } from 'uuid'\nimport { Confirmation } from './Confirmation'\nimport Question from './Question'\nimport { FormPrevious, FormNext } from 'grommet-icons'\n\nAmplify.configure(awsconfig)\n\nconst Form: React.FC<{}> = () => {\n  const { form, translateByID, translateCopy, completion, pageIndex, setPage, values } = useContext(FormContext)\n  const size = useContext(ResponsiveContext)\n\n  const [canSubmit, setCanSubmit] = useState(true)\n  const [claimID, setClaimID] = useState<string>()\n\n  const onSubmit = async () => {\n    setCanSubmit(false)\n    try {\n      /**\n       * TODO: clear any subquestion values if the subquestion is hidden, s.t. we don't submit those values.\n       *\n       * We should only do this at submission time, so that users can toggle switches without losing\n       * their WIP content.\n       */\n      const resp = await API.post('resolverAPI', '/claims', {\n        body: {\n          metadata: {\n            uuid: uuid(window.location.hostname, uuid.DNS),\n            timestamp: new Date(),\n            host: window.location.hostname,\n          },\n          questions: values,\n        },\n      })\n      console.log(resp)\n      setClaimID(resp.id)\n    } catch (err) {\n      setCanSubmit(true)\n      console.error(JSON.stringify(err.response.data, null, 2))\n    }\n  }\n\n  const pageTitles = [...form.pages.map((page) => translateCopy(page.title)), translateByID('submit')]\n\n  const padding = size === 'small' ? '12px' : '24px'\n  const pageComponents = [\n    ...form.pages.map((page) => (\n      <Box\n        pad={{ horizontal: padding, top: padding, bottom: 'none' }}\n        direction=\"column\"\n        justify=\"start\"\n        key={page.heading.en}\n      >\n        <Heading margin=\"none\" level={3}>\n          {translateCopy(page.heading)}\n        </Heading>\n        {page.instructions && <Markdown size=\"small\">{translateCopy(page.instructions)}</Markdown>}\n        <Box margin={{ bottom: 'medium' }}></Box>\n        {page.questions.map((question) => (\n          <Question question={question} key={question.id} />\n        ))}\n      </Box>\n    )),\n    <Review key=\"review\" pages={form.pages} />,\n  ]\n\n  const onClickNext = () => setPage(pageIndex + 1)\n  const onClickBack = () => setPage(pageIndex - 1)\n\n  return (\n    <Box align=\"center\" pad=\"medium\" direction=\"column\" width=\"100%\" style={{ maxWidth: '1200px' }}>\n      <Box width=\"100%\" height=\"100%\" justify=\"center\" direction={size === 'small' ? 'column' : 'row'}>\n        <Card pad=\"medium\" justify=\"between\" flex={{ grow: 1, shrink: 1 }}>\n          {(claimID && <Confirmation id={claimID} />) || (\n            <>\n              {pageComponents[pageIndex]}\n              <Box justify=\"between\" pad=\"medium\" direction=\"row\">\n                {(pageIndex > 0 && (\n                  <Button onClick={onClickBack} label={translateByID('back')} icon={<FormPrevious />} />\n                )) || <Box />}\n                {pageIndex + 1 < pageTitles.length && (\n                  <Button\n                    primary={pageIndex === 0}\n                    onClick={onClickNext}\n                    disabled={!completion[pageIndex]}\n                    icon={<FormNext />}\n                    reverse={true}\n                    label={pageIndex === 0 ? translateByID('get-started') : translateByID('next')}\n                  />\n                )}\n                {pageIndex === pageTitles.length - 1 && (\n                  <Button\n                    primary={true}\n                    onClick={onSubmit}\n                    disabled={!canSubmit}\n                    label={translateByID('submit:button')}\n                  />\n                )}\n              </Box>\n            </>\n          )}\n        </Card>\n        <Sidebar pages={pageTitles} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { Box, Heading, Image, Paragraph } from 'grommet'\n\n/**\n * The USDR component wraps an underlying component with USDR branding.\n */\nexport const USDR: React.FC = (props) => {\n  /**\n   * - Header with USDR logo, app name, link to GitHub\n   * - Footer with \"built by etc\", links to socials\n   */\n  return (\n    <Box direction=\"column\" height={{ min: '100vh' }}>\n      <Box>\n        <Header />\n      </Box>\n\n      <Box flex={{ grow: 1 }} align=\"center\">\n        {props.children}\n      </Box>\n\n      <Box>\n        <Footer />\n      </Box>\n    </Box>\n  )\n}\n\nconst Header: React.FC = () => {\n  return (\n    <Box background={{ color: '#FFFFFF' }} elevation=\"xsmall\" align=\"center\">\n      <Box\n        width=\"100%\"\n        justify=\"start\"\n        style={{ maxWidth: '1200px' }}\n        pad={{ horizontal: 'medium', vertical: '16px' }}\n        direction=\"row\"\n        align=\"center\"\n      >\n        <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n          <Image style={{ display: 'block' }} width=\"32px\" src=\"./USDR-icon-BW.png\" margin={{ right: '12px' }} />\n        </a>\n        <Heading level={4} margin=\"none\">\n          Pandemic Unemployment Assistance Demo\n        </Heading>\n      </Box>\n    </Box>\n  )\n}\n\nconst Footer: React.FC = () => {\n  return (\n    <Box background={{ color: '#FFFFFF' }} elevation=\"medium\" align=\"center\">\n      <Box\n        width=\"100%\"\n        justify=\"start\"\n        style={{ maxWidth: '1200px' }}\n        pad={{ horizontal: 'medium', vertical: '16px' }}\n        direction=\"row\"\n        align=\"center\"\n      >\n        <Paragraph style={{ fontWeight: 600 }} size=\"small\">\n          Built by\n        </Paragraph>\n        <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n          <Image\n            style={{ display: 'block' }}\n            width=\"100px\"\n            src=\"./USDR-full-logo-color.png\"\n            margin={{ horizontal: '12px' }}\n          />\n        </a>\n        <Paragraph size=\"small\">a nonpartisan effort to assist the U.S. government.</Paragraph>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport './App.css'\nimport Form from './components/Form'\nimport { LanguageProvider } from './contexts/language'\nimport { FormProvider } from './contexts/form'\nimport { USDR } from './components/USDR'\n\nconst sizing = {\n  header: '26px',\n  subheader: '18px',\n  body: '18px',\n  detail: '14px',\n}\n\nconst theme = {\n  global: {\n    colors: {\n      text: {\n        dark: 'white',\n        light: 'black',\n      },\n    },\n    focus: {\n      border: {\n        color: '#bfcffb',\n      },\n    },\n    text: {\n      align: 'left',\n    },\n    selected: {\n      background: '#F2F2F2',\n      color: 'black',\n    },\n    control: {\n      border: {\n        color: 'black',\n        radius: '4px',\n      },\n    },\n  },\n  paragraph: {\n    small: { size: sizing.detail },\n    medium: { size: sizing.body },\n    large: { size: sizing.body },\n    xlarge: { size: sizing.body },\n    xxlarge: { size: sizing.body },\n  },\n  heading: {\n    level: {\n      1: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      2: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      3: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      4: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      5: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      6: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n    },\n  },\n  select: {\n    icons: {\n      color: '#000000',\n    },\n    options: {\n      text: {\n        color: 'black',\n      },\n    },\n    container: {\n      borderRadius: '4px',\n    },\n  },\n  button: {\n    border: {\n      color: 'transparent',\n    },\n    primary: {\n      color: '#4776f6',\n    },\n  },\n  checkBox: {\n    color: '#FFFFFF',\n    check: {\n      color: '#205EFF',\n    },\n  },\n}\n\nfunction App() {\n  // `theme as any` because grommet has incomplete TS definitions\n  return (\n    <Grommet className=\"App\" theme={theme as any}>\n      <LanguageProvider>\n        <FormProvider>\n          <USDR>\n            <Form />\n          </USDR>\n        </FormProvider>\n      </LanguageProvider>\n    </Grommet>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}